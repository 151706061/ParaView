<ServerManagerConfiguration>
  <ProxyGroup name="filters">
    <SourceProxy class="vtkPVArrayCalculator"
                 name="Calculator">
      <Documentation long_help="Compute new attribute arrays as function of existing arrays."
                     short_help="Compute new attribute arrays.">The Calculator
                     filter computes a new data array or new point coordinates
                     as a function of existing scalar or vector arrays. If
                     point-centered arrays are used in the computation of a new
                     data array, the resulting array will also be
                     point-centered. Similarly, computations using
                     cell-centered arrays will produce a new cell-centered
                     array. If the function is computing point coordinates, the
                     result of the function must be a three-component vector.
                     The Calculator interface operates similarly to a
                     scientific calculator. In creating the function to
                     evaluate, the standard order of operations applies. Each
                     of the calculator functions is described below. Unless
                     otherwise noted, enclose the operand in parentheses using
                     the ( and ) buttons. Clear: Erase the current function
                     (displayed in the read-only text box above the calculator
                     buttons). /: Divide one scalar by another. The operands
                     for this function are not required to be enclosed in
                     parentheses. *: Multiply two scalars, or multiply a vector
                     by a scalar (scalar multiple). The operands for this
                     function are not required to be enclosed in parentheses.
                     -: Negate a scalar or vector (unary minus), or subtract
                     one scalar or vector from another. The operands for this
                     function are not required to be enclosed in parentheses.
                     +: Add two scalars or two vectors. The operands for this
                     function are not required to be enclosed in parentheses.
                     sin: Compute the sine of a scalar. cos: Compute the cosine
                     of a scalar. tan: Compute the tangent of a scalar. asin:
                     Compute the arcsine of a scalar. acos: Compute the
                     arccosine of a scalar. atan: Compute the arctangent of a
                     scalar. sinh: Compute the hyperbolic sine of a scalar.
                     cosh: Compute the hyperbolic cosine of a scalar. tanh:
                     Compute the hyperbolic tangent of a scalar. min: Compute
                     minimum of two scalars. max: Compute maximum of two
                     scalars. x^y: Raise one scalar to the power of another
                     scalar. The operands for this function are not required to
                     be enclosed in parentheses. sqrt: Compute the square root
                     of a scalar. e^x: Raise e to the power of a scalar. log:
                     Compute the logarithm of a scalar (deprecated. same as
                     log10). log10: Compute the logarithm of a scalar to the
                     base 10. ln: Compute the logarithm of a scalar to the base
                     'e'. ceil: Compute the ceiling of a scalar. floor: Compute
                     the floor of a scalar. abs: Compute the absolute value of
                     a scalar. v1.v2: Compute the dot product of two vectors.
                     The operands for this function are not required to be
                     enclosed in parentheses. cross: Compute cross product of
                     two vectors. mag: Compute the magnitude of a vector. norm:
                     Normalize a vector. The operands are described below. The
                     digits 0 - 9 and the decimal point are used to enter
                     constant scalar values. iHat, jHat, and kHat are vector
                     constants representing unit vectors in the X, Y, and Z
                     directions, respectively. The scalars menu lists the names
                     of the scalar arrays and the components of the vector
                     arrays of either the point-centered or cell-centered data.
                     The vectors menu lists the names of the point-centered or
                     cell-centered vector arrays. The function will be computed
                     for each point (or cell) using the scalar or vector value
                     of the array at that point (or cell). The filter operates
                     on any type of data set, but the input data set must have
                     at least one scalar or vector array. The arrays can be
                     either point-centered or cell-centered. The Calculator
                     filter's output is of the same data set type as the
                     input.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <InputArrayDomain name="input_array" optional="1"/>
        <Documentation>This property specifies the input dataset to the
        Calculator filter. The scalar and vector variables may be chosen from
        this dataset's arrays.</Documentation>
      </InputProperty>
      <IntVectorProperty command="SetAttributeMode"
                         default_values="1"
                         name="AttributeMode"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Point Data" value="1" />
          <Entry text="Cell Data" value="2" />
        </EnumerationDomain>
        <Documentation>This property determines whether the computation is to
        be performed on point-centered or cell-centered data.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetCoordinateResults"
                         default_values="0"
                         name="CoordinateResults"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
        <Documentation>The value of this property determines whether the
        results of this computation should be used as point coordinates or as a
        new array.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetResultArrayName"
                            default_values="Result"
                            name="ResultArrayName"
                            number_of_elements="1">
        <Documentation>This property contains the name for the output array
        containing the result of this computation.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetFunction"
                            name="Function"
                            number_of_elements="1"
                            panel_widget="calculator" >
        <Documentation>This property contains the equation for computing the
        new array.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetReplaceInvalidValues"
                         default_values="1"
                         label="Replace Invalid Results"
                         name="ReplaceInvalidValues"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
        <Documentation>This property determines whether invalid values in the
        computation will be replaced with a specific value. (See the
        ReplacementValue property.)</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetReplacementValue"
                            default_values="0.0"
                            name="ReplacementValue"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain name="range" />
        <Documentation>If invalid values in the computation are to be replaced
        with another value, this property contains that value.</Documentation>
      </DoubleVectorProperty>
      <!-- End Calculator -->
    </SourceProxy>
  </ProxyGroup>
</ServerManagerConfiguration>
