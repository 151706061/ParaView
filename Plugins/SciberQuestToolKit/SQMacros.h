/*
   ____    _ __           ____               __    ____
  / __/___(_) /  ___ ____/ __ \__ _____ ___ / /_  /  _/__  ____
 _\ \/ __/ / _ \/ -_) __/ /_/ / // / -_|_-</ __/ _/ // _ \/ __/
/___/\__/_/_.__/\__/_/  \___\_\_,_/\__/___/\__/ /___/_//_/\__(_)

Copyright 2012 SciberQuest Inc.
*/
#ifndef __SQMacros_h
#define __SQMacros_h

#include <iomanip>
using std::setprecision;
using std::setw;
using std::scientific;
#include<iostream>
using std::endl;
using std::cerr;

#define safeio(s) (s?s:"NULL")

#define sqErrorMacro(os,estr)                       \
    os                                              \
      << "Error in:" << endl                        \
      << __FILE__ << ", line " << __LINE__ << endl  \
      << "" estr << endl;

#define SafeDelete(a)\
  if (a)\
    {\
    a->Delete();\
    }

// disbale warning about passing string literals.
#if !defined(__INTEL_COMPILER) && defined(__GNUG__)
#pragma GCC diagnostic ignored "-Wwrite-strings"
#endif

// The vtkFloatTemplateMacro is like vtkTemplateMacro but
// expands only to floating point types.

#define vtkFloatTemplateMacroCase(typeN, type, call) \
  case typeN: { typedef type VTK_TT; call; }; break

#define vtkFloatTemplateMacro(call) \
  vtkFloatTemplateMacroCase(VTK_DOUBLE, double, call); \
  vtkFloatTemplateMacroCase(VTK_FLOAT, float, call);

#if defined(WIN32)
// quiet warnings generated by vtk template macro expansion
#pragma warning(disable : 4146)
#pragma warning(disable : 4244)
// quiet warning against posix functions
#pragma warning(disable : 4996)
// quiet warning for cast int to bool
#pragma warning(disable : 4800)
// we have no way to fix this warning it comes from
// inside Eigen.
#pragma warning(disable : 4512)

// imitate posix_memalign on windows.
#include <malloc.h>
static
inline void posix_memalign(void **pData, size_t alignAt, size_t nBytes)
{
  *pData=_aligned_malloc(nBytes,alignAt);
}

#define __restrict__ __restrict

#endif
#endif
