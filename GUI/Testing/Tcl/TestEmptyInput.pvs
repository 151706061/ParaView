set pv(vtkTemp1) [$Application GetMainWindow]
set pv(vtkTemp43) [$pv(vtkTemp1) GetMainView]

source [file join [file dirname [info script]] CommandLineOptions.tcl]
ParseCommandLine $pv(vtkTemp43) $argv $argc

proc applyAllFiltersUns {} {
    global Application

    set window [$Application GetMainWindow]
    set fmenu  [$window GetFilterMenu]
    set numItems [$fmenu GetNumberOfItems]
    for {set i 0} {$i < $numItems} {incr i 1} {
        if {[$fmenu GetItemState $i]} {
            set label [$fmenu GetItemLabel $i]
            if {$label != "AttributeEditor" && $label != "Calculator"} {
                $fmenu Invoke $i
                [$window GetCurrentPVSource] AcceptCallback
                [$window GetCurrentPVSource] DeleteCallback
            }
        }
    }

    set kw(vtkTemp1099) [$window CreatePVSource Calculator]
    set kw(vtkTemp1106) [$kw(vtkTemp1099) GetPVWidget {Equation}]
    $kw(vtkTemp1106) ChangeAttributeMode {point}
    $kw(vtkTemp1106) AddScalarVariable {Normals_0} {Normals} 0
    $kw(vtkTemp1106) AddScalarVariable {Normals_1} {Normals} 1
    $kw(vtkTemp1106) AddScalarVariable {Normals_2} {Normals} 2
    $kw(vtkTemp1106) AddVectorVariable {Normals} {Normals}
    $kw(vtkTemp1106) SetFunctionLabel {Normals_0}
    $kw(vtkTemp1099) AcceptCallback

    $kw(vtkTemp1099) DeleteCallback
}

proc applyAllFiltersStru {} {
    global Application

    set window [$Application GetMainWindow]
    set fmenu  [$window GetFilterMenu]
    set numItems [$fmenu GetNumberOfItems]
    for {set i 0} {$i < $numItems} {incr i 1} {
        if {[$fmenu GetItemState $i]} {
            set label [$fmenu GetItemLabel $i]
            if {$label != "AttributeEditor" && $label != "Tessellate" && $label != "Calculator" && $label != "Append Attributes"} {
                $fmenu Invoke $i
                [$window GetCurrentPVSource] AcceptCallback
                [$window GetCurrentPVSource] DeleteCallback
            }
        }
    }

    set kw(vtkTemp1161) [$window CreatePVSource Calculator]
    set kw(vtkTemp1168) [$kw(vtkTemp1161) GetPVWidget {Equation}]
    $kw(vtkTemp1168) ChangeAttributeMode {point}
    $kw(vtkTemp1168) AddScalarVariable {RTData} {RTData} 0
    $kw(vtkTemp1168) SetFunctionLabel {RTData}
    $kw(vtkTemp1161) AcceptCallback

    $kw(vtkTemp1161) DeleteCallback
}

set kw(vtkTemp1) [$Application GetMainWindow]

set kw(vtkTemp1008) [$kw(vtkTemp1) CreatePVSource SphereSource]
$kw(vtkTemp1008) AcceptCallback

set nprocs  [$Application GetNumberOfPartitions]
if {$nprocs > 1} {
    set kw(vtkTemp1104) [$kw(vtkTemp1) CreatePVSource ProcessIdScalars]
    $kw(vtkTemp1104) AcceptCallback

    set kw(vtkTemp1200) [$kw(vtkTemp1) CreatePVSource Threshold]
    set kw(vtkTemp1216) [$kw(vtkTemp1200) GetPVWidget {MinMax}]
    $kw(vtkTemp1216) SetMaxValue 1
    $kw(vtkTemp1216) SetMinValue 0.67
    $kw(vtkTemp1200) AcceptCallback
}
applyAllFiltersUns
if {$nprocs > 1} {
    $kw(vtkTemp1200) DeleteCallback
    $kw(vtkTemp1104) DeleteCallback
}
$kw(vtkTemp1008) DeleteCallback

set kw(vtkTemp1095) [$kw(vtkTemp1) CreatePVSource RTAnalyticSource]
$kw(vtkTemp1095) AcceptCallback
if {$nprocs > 1} {
    set kw(vtkTemp1163) [$kw(vtkTemp1) CreatePVSource ExtractGrid]
    set kw(vtkTemp1167) [$kw(vtkTemp1163) GetPVWidget {VOI}]
    $kw(vtkTemp1167) SetValue -10 10 -10 10 4 10 
    $kw(vtkTemp1163) AcceptCallback
}
applyAllFiltersStru
if {$nprocs > 1} {
    $kw(vtkTemp1163) DeleteCallback
}
$kw(vtkTemp1095) DeleteCallback

$Application Exit
