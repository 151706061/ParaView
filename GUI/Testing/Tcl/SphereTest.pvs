set pvWindow [$Application GetMainWindow]
set pv(vtkTemp43) [$pvWindow GetMainView]

source [file join [file dirname [info script]] CommandLineOptions.tcl]
ParseCommandLine $pv(vtkTemp43) $argv $argc

$pv(vtkTemp43) SetOrientationAxesVisibility 0
$pv(vtkTemp43) SetRendererBackgroundColor 0 0 0

set pvSphere [$pvWindow CreatePVSource SphereSource]
[$pvSphere GetPVWidget {Theta Resolution}] SetValue 16
$pvSphere AcceptCallback

set pvShrink [$pvWindow CreatePVSource ShrinkFilter]
[$pvShrink GetPVWidget {ShrinkFactor}] SetValue 0.9
$pvShrink AcceptCallback

set pvElevation [$pvWindow CreatePVSource ElevationFilter]
set pv(vtkTemp999) [$pvElevation GetPVWidget {Line}]
$pv(vtkTemp999) SetPoint1 0 0 0
$pv(vtkTemp999) SetPoint2 0 0 1
$pvElevation AcceptCallback
[$pvElevation GetPVOutput] DrawSurface
[$pvElevation GetPVOutput] SetInterpolateColorsFlag 1

set pvExtract [$pvWindow CreatePVSource ExtractEdges]
$pvExtract AcceptCallback

set extractOutput [$pvExtract GetPVOutput]
$extractOutput ColorByProperty

set elevOutput [$pvElevation GetPVOutput]
$elevOutput SetVisibility 1


set pvWindow [lindex [vtkPVWindow ListInstances] 0]
$pvWindow SetCurrentPVSource $pvSphere

set MainView [[$Application GetMainWindow] GetMainView]
$MainView SetCameraState 0 0 3.41078 0 0 0 0 1 0

$elevOutput SetVisibility 1
$extractOutput SetVisibility 1

# Retrace
update
$Application StopRecordingScript
[ $Application GetMainWindow ] DeleteAllSources
# Source the trace to regenerate the sources.
if {[catch {set channel [open test.tmp w]}] == 0 } {
   close $channel
   file delete -force test.tmp
   source "[$Application GetTraceFileName]"
}

# Fix the size of the image.
set MainView [[$Application GetMainWindow] GetMainView]
$MainView SetRenderWindowSize 300 300
update
for {set i 0} {$i < 100} {incr i 1} {
	[ $MainView GetCameraControl ] Azimuth 10
	update
        [[$Application GetMainWindow] GetMainView] Render
}

source [file join [file dirname [info script]] Compare.tcl]
Compare $Application $argv $argc

$Application Exit
