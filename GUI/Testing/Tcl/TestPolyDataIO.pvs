set kw(vtkTemp1) [$Application GetMainWindow]
set pv(vtkTemp43) [$kw(vtkTemp1) GetMainView]

source [file join [file dirname [info script]] CommandLineOptions.tcl]
ParseCommandLine $pv(vtkTemp43) $argv $argc

$pv(vtkTemp43) SetOrientationAxesVisibility 0
$pv(vtkTemp43) SetRendererBackgroundColor 0 0 0

$kw(vtkTemp1) SetUseMessageDialog 0

# Create a non-trivial vtkPolyData.
set kw(vtkTemp243) [$kw(vtkTemp1) CreatePVSource SphereSource]
set kw(vtkTemp259) [$kw(vtkTemp243) GetPVWidget {Theta Resolution}]
$kw(vtkTemp259) SetValue 36
set kw(vtkTemp268) [$kw(vtkTemp243) GetPVWidget {Phi Resolution}]
$kw(vtkTemp268) SetValue 36
$kw(vtkTemp243) AcceptCallback
update

# Give it some scalar data.
set kw(vtkTemp295) [$kw(vtkTemp1) CreatePVSource ElevationFilter]
set kw(vtkTemp999) [$kw(vtkTemp295) GetPVWidget {Line}]
$kw(vtkTemp999) SetPoint1 0 0 0
$kw(vtkTemp999) SetPoint2 0 0 1
$kw(vtkTemp295) AcceptCallback

# Choose the file name/type based on whether we are in parallel mode.
set nprocs [$Application GetNumberOfPartitions]

set ext "vtp"
if {$nprocs > 1} { set ext "pvtp" }

# Write the vtkPolyData.
$kw(vtkTemp1) WriteVTKFile "testPolyData.$ext"

# Delete the old pipeline.
$kw(vtkTemp295) DeleteCallback
$kw(vtkTemp243) DeleteCallback

# Read the vtkPolyData from the temporary file.
$kw(vtkTemp1) Open "testPolyData.$ext"
set kw(vtkTemp337) [$kw(vtkTemp1) GetCurrentPVSource]
$kw(vtkTemp337) AcceptCallback
update

source [file join [file dirname [info script]] Compare.tcl]
Compare $Application $argv $argc

# Delete the temporary file.
catch { file delete -force "testPolyData.$ext" }

if {$nprocs > 1} {
  # Delete the temporary file's pieces.
  for {set i 0} { $i < $nprocs } { incr i } {
  catch { file delete -force "testPolyData$i.vtp" }
  }
}
