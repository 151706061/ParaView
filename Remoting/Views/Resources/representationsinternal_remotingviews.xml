<ServerManagerConfiguration>
    <!-- group for representations not meant to be used directly, but that
    should be created in a vtkPVCompositeRepresentation. Helps us keep the
    properties manageable, since we don't need to expose too many properties
    from these. Only public API properties need to be defined for these proxies
    (along with "Input" and "Representation", if applicable).
    -->

  <ProxyGroup name="internal_representations">
    <PVRepresentationProxy class="vtkPVCompositeRepresentation"
                           name="PVRepresentationBase"
                           processes="client|renderserver|dataserver">
      <Documentation>ParaView's default representation for showing any type of
      dataset in the render view.</Documentation>
      <InputProperty command="SetSelectionConnection"
                     name="Selection">
        <DataTypeDomain name="input_type">
          <DataType value="vtkSelection" />
        </DataTypeDomain>
        <Documentation>Set the selection.</Documentation>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for this
        representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetSelectionVisibility"
                         default_values="1"
                         name="SelectionVisibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for the selection, if
        any.</Documentation>
      </IntVectorProperty>
      <RepresentationType subproxy="OutlineRepresentation"
                          text="Outline" />
      <RepresentationType subproxy="FeatureEdgesRepresentation"
                          text="Feature Edges" />
      <RepresentationType subproxy="SurfaceRepresentation"
                          subtype="Points"
                          text="Points" />
      <RepresentationType subproxy="SurfaceRepresentation"
                          subtype="Wireframe"
                          text="Wireframe" />
      <RepresentationType subproxy="SurfaceRepresentation"
                          subtype="Surface"
                          text="Surface" />
      <RepresentationType subproxy="SurfaceRepresentation"
                          subtype="Surface With Edges"
                          text="Surface With Edges" />
      <RepresentationType subproxy="Glyph3DRepresentation"
                          subtype="Surface"
                          text="3D Glyphs" />
      <RepresentationType subproxy="PointGaussianRepresentation"
                          text="Point Gaussian" />
      <StringVectorProperty command="GetRepresentationTypes"
                            information_only="1"
                            name="RepresentationTypesInfo"
                            si_class="vtkSIDataArrayProperty">
        <Documentation>Property that lists the available representation types.
        This is used by the domain for "Representation" to setup the list of
        types available correctly.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetActiveRepresentation"
                            default_values="Surface"
                            name="Representation"
                            number_of_elements="1"
                            panel_visibility="default"
                            panel_widget="display_representation_selector" >
        <Documentation>Choose the type for the representation.</Documentation>
        <RepresentationTypeDomain name="list">
          <RequiredProperties>
            <Property function="StringList"
                      name="RepresentationTypesInfo" />
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </RepresentationTypeDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetCellFieldDataArrayName"
                            default_values="vtkOriginalCellIds"
                            name="SelectionCellFieldDataArrayName"
                            number_of_elements="1"
                            panel_visibility="never">
        <ArrayListDomain input_domain_name="input_array_cell"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetPointFieldDataArrayName"
                            default_values="vtkOriginalPointIds"
                            name="SelectionPointFieldDataArrayName"
                            number_of_elements="1"
                            panel_visibility="never">
        <ArrayListDomain input_domain_name="input_array_point"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <SubProxy>
        <Proxy name="SurfaceRepresentation"
               proxygroup="representations"
               proxyname="SurfaceRepresentation"></Proxy>
        <ExposedProperties>
          <PropertyGroup panel_visibility="default"
                         panel_widget="ColorEditor"
                         label="Coloring" >
            <Property name="AmbientColor" />
            <Property name="ColorArrayName" />
            <Property name="DiffuseColor" />
            <Property name="LookupTable" />
            <Property name="UseSeparateColorMap" />
          </PropertyGroup>

          <PropertyGroup label="Scalar Coloring">
            <Property name="MapScalars"
                      panel_visibility="advanced" />
            <Property name="MultiComponentsMapping"
                      panel_visibility="advanced" />
            <Property name="InterpolateScalarsBeforeMapping"
                      panel_visibility="advanced" />
            <Property name="UseNanColorForMissingArrays"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <PropertyGroup label="Styling">
            <Property name="Opacity"
                      panel_visibility="default" />
            <Property name="PointSize"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="points" />
            <Property name="LineWidth"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="wireframe" />
            <Property name="RenderLinesAsTubes"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="wireframe"/>
            <Property name="RenderPointsAsSpheres"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="points"/>
            <Hints>
              <!--Hide for volume representation-->
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="Representation"
                                       value="Volume"
                                       inverse="1" />
            </Hints>
          </PropertyGroup>
          <PropertyGroup name="Lighting">
            <Property name="DisableLighting"
                      panel_visibility="advanced" />
            <Property name="Diffuse"
                      panel_visibility="advanced" />
          </PropertyGroup>
          <PropertyGroup name="Lighting">
            <Property name="Interpolation"
                      panel_visibility="advanced" />
            <Property name="Specular"
                      panel_visibility="default" />
            <Property name="SpecularColor"
                      panel_widget="color_selector"
                      panel_visibility="advanced" />
            <Property name="InteractiveSelectionColor"
                      panel_visibility="never" />
            <Property name="SpecularPower"
                      panel_visibility="advanced" />
            <Property name="Luminosity"
                      panel_visibility="advanced" />
            <Property name="Ambient" panel_visibility="advanced"/>
            <Property name="Roughness" panel_visibility="advanced"/>
            <Property name="Metallic" panel_visibility="advanced"/>
            <Property name="EdgeTint"
                      panel_widget="color_selector"
                      panel_visibility="advanced"/>
            <Property name="Anisotropy" panel_visibility="advanced"/>
            <Property name="AnisotropyRotation" panel_visibility="advanced"/>
            <Property name="BaseIOR" panel_visibility="advanced"/>
            <Property name="CoatStrength" panel_visibility="advanced"/>
            <Property name="CoatIOR" panel_visibility="advanced"/>
            <Property name="CoatRoughness" panel_visibility="advanced"/>
            <Property name="CoatColor"
                      panel_widget="color_selector"
                      panel_visibility="advanced" />
            <Property name="SelectNormalArray" panel_visibility="advanced"/>
            <Property name="SelectTangentArray" panel_visibility="advanced"/>
            <Hints>
              <PropertyWidgetDecorator type="CompositeDecorator">
                <Expression type="and">
                  <!-- Hide when DisableLighting selected -->
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="DisableLighting"
                                           value="0" />
                  <!-- Hide for volume representation -->
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Volume"
                                           inverse="1" />
                </Expression>
              </PropertyWidgetDecorator>
            </Hints>
          </PropertyGroup>
          <PropertyGroup name="Surface Normals">
            <Property name="ComputePointNormals"
                      panel_visibility="default"/>
            <Property name="Splitting"
                      panel_visibility="default"/>
            <Property name="FeatureAngle"
                      panel_visibility="default"/>
            <Hints>
              <PropertyWidgetDecorator type="CompositeDecorator">
                <Expression type="or">
                  <!-- Show for Surface representation -->
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Surface"/>
                  <!-- Show for Surface With Edges representation -->
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Surface With Edges"/>
                  <!-- Show for Surface LIC representation -->
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Surface LIC"/>
                </Expression>
              </PropertyWidgetDecorator>
            </Hints>
          </PropertyGroup>
          <PropertyGroup label="Texturing">
            <Property name="SelectTCoordArray" panel_visibility="advanced"/>
            <Property name="Texture" panel_visibility="advanced"/>
            <Property name="RepeatTextures" panel_visibility="advanced"/>
            <Property name="InterpolateTextures" panel_visibility="advanced"/>
            <Property name="SeamlessU" panel_visibility="advanced"/>
            <Property name="SeamlessV" panel_visibility="advanced"/>
            <Property name="UseMipmapTextures" panel_visibility="advanced"/>
            <Property name="ShowTexturesOnBackface" panel_visibility="advanced"/>
            <Property name="BaseColorTexture" panel_visibility="advanced"/>
            <Property name="NormalTexture" panel_visibility="advanced"/>
            <Property name="NormalScale" panel_visibility="advanced"/>
            <Property name="CoatNormalTexture" panel_visibility="advanced"/>
            <Property name="CoatNormalScale" panel_visibility="advanced"/>
            <Property name="MaterialTexture" panel_visibility="advanced"/>
            <Property name="OcclusionStrength" panel_visibility="advanced"/>
            <Property name="AnisotropyTexture" panel_visibility="advanced"/>
            <Property name="EmissiveTexture" panel_visibility="advanced"/>
            <Property name="EmissiveFactor" panel_visibility="advanced"/>
            <Property name="TextureTransform" panel_visibility="advanced"/>
            <Hints>
              <PropertyWidgetDecorator type="CompositeDecorator">
                <Expression type="and">
                  <!-- Hide when DisableLighting selected -->
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="DisableLighting"
                                           value="0" />
                  <!-- Hide for volume representation -->
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Volume"
                                           inverse="1" />
                </Expression>
              </PropertyWidgetDecorator>
            </Hints>
          </PropertyGroup>

          <PropertyGroup label="Edge Styling">
            <Property name="EdgeColor"
                      panel_widget="color_selector_with_palette"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="Surface With Edges" />
            <Property name="EdgeOpacity"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="Surface With Edges" />
          </PropertyGroup>

          <PropertyGroup label="Backface Styling">
            <Property name="BackfaceRepresentation"
                      panel_visibility="advanced" />
            <Property name="BackfaceAmbientColor"
                      panel_widget="color_selector"
                      panel_visibility="advanced" />
            <Property name="BackfaceDiffuseColor"
                      panel_widget="color_selector"
                      panel_visibility="advanced" />
            <Property name="BackfaceOpacity"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <PropertyGroup label="Transforming">
            <Property name="Position"
                      exposed_name="Translation"
                      panel_visibility="advanced" />
            <Property name="Scale"
                      panel_visibility="advanced" />
            <Property name="Orientation"
                      panel_visibility="advanced" />
            <Property name="Origin"
                      panel_visibility="advanced" />
            <Property name="CoordinateShiftScaleMethod"
                      panel_visibility="advanced"/>
            <Property name="CoordinateSystem"
                      panel_visibility="advanced"/>
          </PropertyGroup>

          <PropertyGroup label="Miscellaneous">
            <Property name="Pickable"
                      panel_visibility="advanced" />
            <Property name="StaticMode"
                      panel_visibility="never" />
            <Property name="SuppressLOD"
                      panel_visibility="never" />
            <Property name="UserTransform"
                      panel_visibility="never" />
            <Property name="Triangulate"
                      panel_visibility="advanced" />
            <Property name="UseShaderReplacements"
                      panel_visibility="advanced" />
            <Property name="ShaderReplacements"
                      panel_visibility="advanced" />
            <Property name="NonlinearSubdivisionLevel"
                      panel_visibility="advanced" />
            <Property name="MatchBoundariesIgnoringCellOrder"
                      panel_visibility="advanced" />
            <Property name="BlockColorsDistinctValues"
                      panel_visibility="advanced" />
            <Property name="UseDataPartitions"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <PropertyGroup panel_visibility="advanced"
                         label="Ray Tracing" >
            <Property name="OSPRayUseScaleArray" />
            <Property name="OSPRayScaleArray" />
            <Property name="OSPRayScaleFunction" />
            <Property name="OSPRayMaterial" />
          </PropertyGroup>

          <PropertyGroup label="Blocks"
                         panel_widget="DataAssemblyEditor"
                         panel_visibility="multiblock_inspector">
            <Property name="Assembly"       function="ActiveAssembly" />
            <Property name="SelectedBlockSelectors" function="SelectedSelectors" />
            <Property name="BlockSelectors" function="Selectors" />
            <Hints>
              <DataAssemblyPropertyWidget use_inputname_as_header="1" link_active_selection="1"/>
            </Hints>
          </PropertyGroup>

          <PropertyGroup label="Block Coloring"
                         panel_visibility="multiblock_inspector"
                         panel_widget="BlockColorEditor">
            <Property name="BlockColors"/>
            <Property name="BlockColorArrayNames"/>
            <Property name="BlockLookupTables"/>
            <Property name="BlockUseSeparateColorMaps"/>
          </PropertyGroup>

          <PropertyGroup label="Block Scalar Coloring"
                         panel_visibility="multiblock_inspector"
                         panel_widget="BlockPropertiesEditor">
            <Property name="BlockMapScalars" function="MapScalars"/>
            <Property name="BlockInterpolateScalarsBeforeMappings" function="InterpolateScalarsBeforeMappings"/>
            <Property name="BlockOpacities" function="Opacities"/>
            <!-- The following properties are used to create a GUI which edits the above properties -->
            <Property name="BlockMapScalarsGUI" function="MapScalarsGUI"/>
            <Property name="BlockInterpolateScalarsBeforeMappingsGUI" function="InterpolateScalarsBeforeMappingsGUI"/>
            <Property name="BlockOpacitiesGUI" function="OpacitiesGUI"/>
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="OutlineRepresentation"
               proxygroup="representations"
               proxyname="OutlineRepresentation"></Proxy>
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="FeatureEdgesRepresentation"
               proxygroup="representations"
               proxyname="FeatureEdgesRepresentation"></Proxy>
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="Glyph3DRepresentation"
               proxygroup="representations"
               proxyname="Glyph3DRepresentation"></Proxy>
        <ExposedProperties>
          <PropertyGroup label="Glyph Parameters"
                         panel_visibility="advanced">
            <Property name="Masking"
                      panel_visibility="never" />
            <Property name="MeshVisibility"
                      panel_visibility="never" />
            <Property name="Orient"
                      panel_visibility="advanced" />
            <Property name="OrientationMode"
                      panel_visibility="advanced" />
            <Property name="SelectOrientationVectors"
                      panel_visibility="advanced" />
            <Property name="Scaling"
                      panel_visibility="advanced" />
            <Property name="ScaleMode"
                      panel_visibility="advanced" />
            <Property name="ScaleFactor"
                      panel_visibility="advanced" />
            <Property name="SelectMaskArray"
                      panel_visibility="never" />
            <Property name="SelectScaleArray"
                      panel_visibility="advanced" />
            <Property name="GlyphType"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="3d glyphs"/>
            <Property name="UseGlyphTable"
                      panel_visibility="advanced"/>
            <Property name="GlyphTableIndexArray"
                      panel_visibility="advanced"/>
            <Property name="UseCompositeGlyphTable"
                      panel_visibility="advanced"/>
            <Property name="UseGlyphCullingAndLOD"
                      panel_visibility="advanced"/>
            <Property name="LODValues"
                      panel_visibility="advanced"/>
            <Property name="ColorByLODIndex"
                      panel_visibility="advanced"/>
            <Hints>
                <PropertyWidgetDecorator type="GenericDecorator"
                                         mode="visibility"
                                         property="Representation"
                                         value="3D Glyphs" />
            </Hints>
          </PropertyGroup>
        </ExposedProperties>
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="PointGaussianRepresentation"
               proxygroup="representations" proxyname="PointGaussianRepresentation">
        </Proxy>
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
        <ExposedProperties>
          <PropertyGroup label="Point Gaussian">
            <Property name="GaussianRadius" />
            <Property name="ShaderPreset" />
            <Property name="CustomTriangleScale" />
            <Property name="CustomShader" />
            <Property name="Emissive" />
            <Property name="ScaleByArray" />
            <Property name="SetScaleArray" />
            <Property name="ScaleArrayComponent" />
            <Property name="UseScaleFunction" />
            <Property name="ScaleTransferFunction" />
            <Property name="OpacityByArray" />
            <Property name="OpacityArray" />
            <Property name="OpacityArrayComponent" />
            <Property name="OpacityTransferFunction" />
            <Hints>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="Representation"
                                       value="Point Gaussian" />
            </Hints>
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>
      <ProxyProperty name="DataAxesGrid"
                     command="SetGridAxesRepresentation"
                     panel_widget="proxy_editor" >
        <ProxyListDomain name="proxy_list">
          <Proxy group="representations" name="GridAxesRepresentation" />
        </ProxyListDomain>
        <Hints>
          <!-- tell pqProxyEditorPropertyWidget that use the "GridAxesVisibility"
               property on the GridAxes3DRepr for a checkbox on the UI -->
          <ProxyEditorPropertyWidget property="GridAxesVisibility" />
        </Hints>
      </ProxyProperty>
      <SubProxy command="SetSelectionRepresentation">
        <Proxy name="SelectionRepresentation"
               proxygroup="representations"
               proxyname="SelectionRepresentation" />
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
          <Exception name="Representation" />
          <Exception name="Color" />
          <Exception name="LineWidth" />
          <Exception name="Opacity" />
          <Exception name="PointSize" />
        </ShareProperties>
        <ExposedProperties>
          <Property exposed_name="SelectionColor" name="Color" panel_visibility="never" />
          <Property exposed_name="SelectionOpacity" name="Opacity" panel_visibility="never" />
          <Property exposed_name="SelectionUseOutline" name="UseOutline" panel_visibility="never" />
          <Property exposed_name="SelectionRepresentation" name="Representation" panel_visibility="never" />
          <Property exposed_name="SelectionPointSize" name="PointSize" panel_visibility="never" />
          <Property exposed_name="SelectionLineWidth" name="LineWidth" panel_visibility="never" />
          <Property exposed_name="SelectionCellLabelVisibility" name="CellLabelVisibility" panel_visibility="never"/>
          <PropertyGroup label="Cell Label Font" panel_visibility="never" panel_widget="FontEditor">
            <Property exposed_name="SelectionCellLabelBold" name="CellLabelBold" function="Bold"/>
            <Property exposed_name="SelectionCellLabelColor" name="CellLabelColor" function="Color"/>
            <Property exposed_name="SelectionCellLabelFontFamily" name="CellLabelFontFamily" function="Family"/>
            <Property exposed_name="SelectionCellLabelFontFile" name="CellLabelFontFile" function="File"/>
            <Property exposed_name="SelectionCellLabelFontSize" name="CellLabelFontSize" function="Size"/>
            <Property exposed_name="SelectionCellLabelItalic" name="CellLabelItalic" function="Italics"/>
            <Property exposed_name="SelectionCellLabelJustification" name="CellLabelJustification" function="Justification"/>
            <Property exposed_name="SelectionCellLabelOpacity" name="CellLabelOpacity" function="Opacity"/>
            <Property exposed_name="SelectionCellLabelShadow" name="CellLabelShadow" function="Shadow"/>
          </PropertyGroup>
          <Property exposed_name="SelectionCellLabelFormat" name="CellLabelFormat" panel_visibility="never"/>
          <Property exposed_name="SelectionPointLabelVisibility" name="PointLabelVisibility" panel_visibility="never"/>
          <Property exposed_name="SelectionMaximumNumberOfLabels" name="MaximumNumberOfLabels" panel_visibility="never"/>
          <PropertyGroup label="Point Label Font" panel_visibility="never" panel_widget="FontEditor">
            <Property exposed_name="SelectionPointLabelBold" name="PointLabelBold" function="Bold"/>
            <Property exposed_name="SelectionPointLabelColor" name="PointLabelColor" function="Color"/>
            <Property exposed_name="SelectionPointLabelFontFamily" name="PointLabelFontFamily" function="Family"/>
            <Property exposed_name="SelectionPointLabelFontFile" name="PointLabelFontFile" function="File"/>
            <Property exposed_name="SelectionPointLabelFontSize" name="PointLabelFontSize" function="Size"/>
            <Property exposed_name="SelectionPointLabelItalic" name="PointLabelItalic" function="Italics"/>
            <Property exposed_name="SelectionPointLabelJustification" name="PointLabelJustification" function="Justification"/>
            <Property exposed_name="SelectionPointLabelOpacity" name="PointLabelOpacity" function="Opacity"/>
            <Property exposed_name="SelectionPointLabelShadow" name="PointLabelShadow" function="Shadow"/>
          </PropertyGroup>
          <Property exposed_name="SelectionPointLabelFormat" name="PointLabelFormat" panel_visibility="never"/>
        </ExposedProperties>
      </SubProxy>
      <ProxyProperty name="PolarAxes"
                     command="SetPolarAxesRepresentation"
                     panel_visibility="advanced"
                     panel_widget="proxy_editor">
        <ProxyListDomain name="proxy_list">
          <Proxy group="representations" name="PolarAxesRepresentation" />
        </ProxyListDomain>
        <Hints>
          <ProxyEditorPropertyWidget property="Visibility"/>
            <!-- tell pqProxyEditorPropertyWidget that use the "Visibility"
                 property on the PolarAxesActor proxy for a checkbox
                 on the UI -->
        </Hints>
      </ProxyProperty>
      <PropertyGroup label="Annotations">
        <Property name="PolarAxes"
                  panel_visibility="advanced" />
      </PropertyGroup>
    </PVRepresentationProxy>

    <!-- A proxy for composite datasets holding cell grids -->
    <PVRepresentationProxy class="vtkPVCompositeRepresentation"
                           name="PVCellGridRepresentationBase"
                           processes="client|renderserver|dataserver">
      <Documentation>ParaView's default representation for showing any type of
      dataset in the render view.</Documentation>
      <InputProperty command="SetSelectionConnection"
                     name="Selection">
        <DataTypeDomain name="input_type">
          <DataType value="vtkSelection" />
        </DataTypeDomain>
        <Documentation>Set the selection.</Documentation>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for this
        representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetSelectionVisibility"
                         default_values="1"
                         name="SelectionVisibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for the selection, if
        any.</Documentation>
      </IntVectorProperty>
      <RepresentationType subproxy="OutlineRepresentation"
                          text="Outline" />
      <RepresentationType subproxy="CellGridSurfaceRepresentation"
                          subtype="Surface"
                          text="Surface" />
      <StringVectorProperty command="GetRepresentationTypes"
                            information_only="1"
                            name="RepresentationTypesInfo"
                            si_class="vtkSIDataArrayProperty">
        <Documentation>Property that lists the available representation types.
        This is used by the domain for "Representation" to setup the list of
        types available correctly.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetActiveRepresentation"
                            default_values="Surface"
                            name="Representation"
                            number_of_elements="1"
                            panel_visibility="default"
                            panel_widget="display_representation_selector" >
        <Documentation>Choose the type for the representation.</Documentation>
        <RepresentationTypeDomain name="list">
          <RequiredProperties>
            <Property function="StringList"
                      name="RepresentationTypesInfo" />
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </RepresentationTypeDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetCellFieldDataArrayName"
                            default_values="vtkOriginalCellIds"
                            name="SelectionCellFieldDataArrayName"
                            number_of_elements="1"
                            panel_visibility="never">
        <ArrayListDomain input_domain_name="input_array_cell"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetPointFieldDataArrayName"
                            default_values="vtkOriginalPointIds"
                            name="SelectionPointFieldDataArrayName"
                            number_of_elements="1"
                            panel_visibility="never">
        <ArrayListDomain input_domain_name="input_array_point"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <SubProxy>
        <Proxy name="CellGridSurfaceRepresentation"
               proxygroup="representations"
               proxyname="CellGridSurfaceRepresentation"></Proxy>
        <ExposedProperties>
          <PropertyGroup panel_visibility="default"
                         label="Style" >
            <Property name="SidesToShow" />
            <Property name="PreserveRenderableInputs" />
            <Property name="OmitSidesForRenderableInputs" />
          </PropertyGroup>

          <PropertyGroup panel_visibility="default"
                         panel_widget="ColorEditor"
                         label="Coloring" >
            <Property name="AmbientColor" />
            <Property name="ColorArrayName" />
            <Property name="DiffuseColor" />
            <Property name="LookupTable" />
            <Property name="UseSeparateColorMap" />
          </PropertyGroup>

          <PropertyGroup label="Scalar Coloring">
            <Property name="MapScalars"
                      panel_visibility="advanced" />
            <Property name="MultiComponentsMapping"
                      panel_visibility="advanced" />
            <Property name="InterpolateScalarsBeforeMapping"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <PropertyGroup label="Styling">
            <Property name="Opacity"
                      panel_visibility="default" />
            <Property name="PointSize"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="points" />
            <Property name="LineWidth"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="wireframe" />
            <Property name="RenderLinesAsTubes"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="wireframe"/>
            <Property name="RenderPointsAsSpheres"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="points"/>
          </PropertyGroup>
          <PropertyGroup name="Lighting">
            <Property name="Interpolation"
                      panel_visibility="advanced" />
            <Property name="Diffuse" panel_visibility="advanced"/>
            <Property name="Specular"
                      panel_visibility="default" />
            <Property name="SpecularColor"
                      panel_widget="color_selector"
                      panel_visibility="advanced" />
            <Property name="InteractiveSelectionColor"
                      panel_visibility="never" />
            <Property name="SpecularPower"
                      panel_visibility="advanced" />
            <Property name="Luminosity"
                      panel_visibility="advanced" />
            <Property name="Ambient" panel_visibility="advanced"/>
          </PropertyGroup>

          <PropertyGroup label="Edge Styling">
            <Property name="EdgeColor"
                      panel_widget="color_selector_with_palette"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="Surface With Edges" />
          </PropertyGroup>

          <PropertyGroup label="Transforming">
            <Property name="Position"
                      exposed_name="Translation"
                      panel_visibility="advanced" />
            <Property name="Scale"
                      panel_visibility="advanced" />
            <Property name="Orientation"
                      panel_visibility="advanced" />
            <Property name="Origin"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <PropertyGroup label="Miscellaneous">
            <Property name="Pickable"
                      panel_visibility="advanced" />
            <Property name="StaticMode"
                      panel_visibility="never" />
            <Property name="SuppressLOD"
                      panel_visibility="never" />
            <Property name="UserTransform"
                      panel_visibility="never" />
            <Property name="BlockColorsDistinctValues"
                      panel_visibility="advanced" />
            <Property name="UseDataPartitions"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <PropertyGroup label="Blocks"
                         panel_widget="DataAssemblyEditor"
                         panel_visibility="multiblock_inspector">
            <Property name="Assembly" function="ActiveAssembly"/>
            <Property name="SelectedBlockSelectors" function="SelectedSelectors"/>
            <Property name="BlockSelectors" function="Selectors"/>
            <Hints>
              <DataAssemblyPropertyWidget use_inputname_as_header="1" link_active_selection="1"/>
            </Hints>
          </PropertyGroup>

          <PropertyGroup label="Block Coloring"
                         panel_visibility="multiblock_inspector"
                         panel_widget="BlockColorEditor">
            <Property name="BlockColors"/>
            <Property name="BlockColorArrayNames"/>
            <Property name="BlockLookupTables"/>
            <Property name="BlockUseSeparateColorMaps"/>
          </PropertyGroup>

          <PropertyGroup label="Block Scalar Coloring"
                         panel_visibility="multiblock_inspector"
                         panel_widget="BlockPropertiesEditor">
            <Property name="BlockMapScalars" function="MapScalars"/>
            <Property name="BlockInterpolateScalarsBeforeMappings" function="InterpolateScalarsBeforeMappings"/>
            <Property name="BlockOpacities" function="Opacities"/>
            <!-- The following properties are used to create a GUI which edits the above properties -->
            <Property name="BlockMapScalarsGUI" function="MapScalarsGUI"/>
            <Property name="BlockInterpolateScalarsBeforeMappingsGUI" function="InterpolateScalarsBeforeMappingsGUI"/>
            <Property name="BlockOpacitiesGUI" function="OpacitiesGUI"/>
          </PropertyGroup>

        </ExposedProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="OutlineRepresentation"
               proxygroup="representations"
               proxyname="OutlineRepresentation"></Proxy>
        <ShareProperties subproxy="CellGridSurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>
      <ProxyProperty name="DataAxesGrid"
                     command="SetGridAxesRepresentation"
                     panel_widget="proxy_editor" >
        <ProxyListDomain name="proxy_list">
          <Proxy group="representations" name="GridAxesRepresentation" />
        </ProxyListDomain>
        <Hints>
          <!-- tell pqProxyEditorPropertyWidget that use the "GridAxesVisibility"
               property on the GridAxes3DRepr for a checkbox on the UI -->
          <ProxyEditorPropertyWidget property="GridAxesVisibility" />
        </Hints>
      </ProxyProperty>
      <SubProxy command="SetSelectionRepresentation">
        <Proxy name="SelectionRepresentation"
               proxygroup="representations"
               proxyname="SelectionRepresentation" />
        <ShareProperties subproxy="CellGridSurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
          <Exception name="Representation" />
          <Exception name="Color" />
          <Exception name="LineWidth" />
          <Exception name="Opacity" />
          <Exception name="PointSize" />
        </ShareProperties>
        <ExposedProperties>
          <Property exposed_name="SelectionColor" name="Color" panel_visibility="never" />
          <Property exposed_name="SelectionOpacity" name="Opacity" panel_visibility="never" />
          <Property exposed_name="SelectionUseOutline" name="UseOutline" panel_visibility="never" />
          <Property exposed_name="SelectionRepresentation" name="Representation" panel_visibility="never" />
          <Property exposed_name="SelectionPointSize" name="PointSize" panel_visibility="never" />
          <Property exposed_name="SelectionLineWidth" name="LineWidth" panel_visibility="never" />
          <Property exposed_name="SelectionCellLabelVisibility" name="CellLabelVisibility" panel_visibility="never"/>
          <PropertyGroup label="Cell Label Font" panel_visibility="never" panel_widget="FontEditor">
            <Property exposed_name="SelectionCellLabelBold" name="CellLabelBold" function="Bold"/>
            <Property exposed_name="SelectionCellLabelColor" name="CellLabelColor" function="Color"/>
            <Property exposed_name="SelectionCellLabelFontFamily" name="CellLabelFontFamily" function="Family"/>
            <Property exposed_name="SelectionCellLabelFontFile" name="CellLabelFontFile" function="File"/>
            <Property exposed_name="SelectionCellLabelFontSize" name="CellLabelFontSize" function="Size"/>
            <Property exposed_name="SelectionCellLabelItalic" name="CellLabelItalic" function="Italics"/>
            <Property exposed_name="SelectionCellLabelJustification" name="CellLabelJustification" function="Justification"/>
            <Property exposed_name="SelectionCellLabelOpacity" name="CellLabelOpacity" function="Opacity"/>
            <Property exposed_name="SelectionCellLabelShadow" name="CellLabelShadow" function="Shadow"/>
          </PropertyGroup>
          <Property exposed_name="SelectionCellLabelFormat" name="CellLabelFormat" panel_visibility="never"/>
          <Property exposed_name="SelectionPointLabelVisibility" name="PointLabelVisibility" panel_visibility="never"/>
          <Property exposed_name="SelectionMaximumNumberOfLabels" name="MaximumNumberOfLabels" panel_visibility="never"/>
          <PropertyGroup label="Point Label Font" panel_visibility="never" panel_widget="FontEditor">
            <Property exposed_name="SelectionPointLabelBold" name="PointLabelBold" function="Bold"/>
            <Property exposed_name="SelectionPointLabelColor" name="PointLabelColor" function="Color"/>
            <Property exposed_name="SelectionPointLabelFontFamily" name="PointLabelFontFamily" function="Family"/>
            <Property exposed_name="SelectionPointLabelFontFile" name="PointLabelFontFile" function="File"/>
            <Property exposed_name="SelectionPointLabelFontSize" name="PointLabelFontSize" function="Size"/>
            <Property exposed_name="SelectionPointLabelItalic" name="PointLabelItalic" function="Italics"/>
            <Property exposed_name="SelectionPointLabelJustification" name="PointLabelJustification" function="Justification"/>
            <Property exposed_name="SelectionPointLabelOpacity" name="PointLabelOpacity" function="Opacity"/>
            <Property exposed_name="SelectionPointLabelShadow" name="PointLabelShadow" function="Shadow"/>
          </PropertyGroup>
          <Property exposed_name="SelectionPointLabelFormat" name="PointLabelFormat" panel_visibility="never"/>
        </ExposedProperties>
      </SubProxy>
      <!-- End of PVCellGridRepresentationBase -->
    </PVRepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy class="vtkAMROutlineRepresentation"
                         name="AMROutlineRepresentation"
                         processes="client|renderserver|dataserver">
      <Documentation>Representation for showing an outline for AMR
      dataset that is streaming capable.</Documentation>

      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkOverlappingAMR" />
        </DataTypeDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>

      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0 0 0"
                            name="Origin"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetPickable"
                         default_values="1"
                         name="Pickable"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty argument_is_array="1"
                            command="SetUserTransform"
                            default_values="1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1"
                            name="UserTransform"
                            number_of_elements="16">
        <Documentation>
          In addition to the instance variables such as position and
          orientation, you can add an additional transformation for your own
          use. This transformation is concatenated with the actor's internal
          transformation, which you implicitly create through the use of
          Position, Origin, Orientation. The value is 4x4 matrix for the linear
          transform to use.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetAmbient"
                            default_values="0.0"
                            name="Ambient"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuse"
                            default_values="1.0"
                            name="Diffuse"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecular"
                            default_values="0.0"
                            name="Specular"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularPower"
                            default_values="100.0"
                            name="SpecularPower"
                            number_of_elements="1">
        <DoubleRangeDomain max="100"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetAmbientColor"
                            default_values="1.0 1.0 1.0"
                            name="AmbientColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="ForegroundColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuseColor"
                            default_values="1.0 1.0 1.0"
                            name="DiffuseColor"
                            number_of_elements="3"
                            panel_widget="color_selector_with_palette">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="SurfaceColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularColor"
                            default_values="1.0 1.0 1.0"
                            name="SpecularColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLineWidth"
                            default_values="1.0"
                            name="LineWidth"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOpacity"
                            default_values="1.0"
                            name="Opacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLuminosity"
                            default_values="0.0"
                            name="Luminosity"
                            number_of_elements="1">
        <DoubleRangeDomain max="100.0"
                           min="0"
                           name="range" />
        <Documentation>Makes the object emit light.
        Only takes effect with OSPRay's path traced renderer.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="EnableOSPRay"
                                   values="1" />
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetRenderLinesAsTubes"
                         default_values="0"
                         name="RenderLinesAsTubes"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          When set, all lines are rendered as 3D tubes, if supported by OpenGL driver.
        </Documentation>
      </IntVectorProperty>
      <!-- end of AMROutlineRepresentation -->
    </RepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy class="vtkAMRStreamingVolumeRepresentation"
                         name="AMRVolumeRepresentation"
                         processes="client|renderserver|dataserver">
      <Documentation>
        Representation for rendering Overlapping AMR as volume.
      </Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkOverlappingAMR" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="any"
                          name="input_array_any">
        </InputArrayDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            name="ColorArrayName"
                            no_custom_default="1"
                            number_of_elements="5">
        <Documentation>
          Set the array to color with. One must specify the field association and
          the array name of the array. If the array is missing, scalar coloring will
          automatically be disabled.
        </Documentation>
        <RepresentedArrayListDomain name="array_list"
                         input_domain_name="input_array_any">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0 0 0"
                            name="Origin"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetPickable"
                         default_values="1"
                         name="Pickable"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetInterpolationType"
                         default_values="2"
                         name="InterpolationType"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Nearest"
                 value="0" />
          <Entry text="Linear"
                 value="1" />
          <Entry text="Cubic"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <ProxyProperty command="SetColor"
                     name="LookupTable" >
        <ProxyGroupDomain name="groups">
          <Group name="transfer_functions" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <DoubleVectorProperty command="SetAmbient"
                            default_values="0.0"
                            name="Ambient"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuse"
                            default_values="1.0"
                            name="Diffuse"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecular"
                            default_values="0.0"
                            name="Specular"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularPower"
                            default_values="100.0"
                            name="SpecularPower"
                            number_of_elements="1">
        <DoubleRangeDomain max="100"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetShade"
                         default_values="0"
                         name="Shade"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Enable/Disable shading.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetNumberOfSamples"
                         default_values="64 128 64"
                         name="NumberOfSamples"
                         number_of_elements="3">
        <Documentation>
          Set the number of samples used to create an uniform grid
          from the AMR.
        </Documentation>
        <IntRangeDomain name="range" />
      </IntVectorProperty>
      <ProxyProperty command="SetScalarOpacity"
                     name="ScalarOpacityFunction" >
        <ProxyGroupDomain name="groups">
          <Group name="piecewise_functions" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <IntVectorProperty command="SetRequestedRenderMode"
                         default_values="0"
                         name="VolumeRenderingMode"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Smart"
                 value="0" />
          <Entry text="Ray Cast Only"
                 value="2" />
          <Entry text="GPU Based"
                 value="4" />
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty command="SetResamplingMode"
                         default_values="0"
                         name="ResamplingMode"
                         number_of_elements="1"
                         panel_visibility="default" >
        <EnumerationDomain name="enum">
          <Entry text="Over Data Bounds" value="0" />
          <Entry text="Using View Frustum" value="1" />
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty command="SetStreamingRequestSize"
                         default_values="10"
                         name="StreamingRequestSize"
                         number_of_elements="1"
                         panel_visibility="default">
        <IntRangeDomain name="range" min="1" max="10000" />
        <Documentation>
          Set the number of blocks to request at a given time on a single
          process when streaming.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty command="SetScalarOpacityUnitDistance"
                            default_values="1"
                            name="ScalarOpacityUnitDistance"
                            number_of_elements="1">
        <BoundsDomain mode="approximate_cell_length"
                      name="bounds" >
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </BoundsDomain>
      </DoubleVectorProperty>
      <!-- end of AMRVolumeRepresentation -->
    </RepresentationProxy>

  <!-- ================================================================== -->
    <RepresentationProxy class="vtkGeometryRepresentation"
                         name="SurfaceRepresentationBase"
                         processes="client|renderserver|dataserver">
      <Documentation>Representation to show any dataset in a 3D render
      view.</Documentation>

      <IntVectorProperty command="SetPlaceHolderDataType"
                         default_values="38"
                         name="PlaceHolderDataType"
                         panel_visibility="never"
                         number_of_elements="1">
        <DataTypeQueryDomain name="data_type_query">
          <RequiredProperties>
            <Property function="Input"
                      name="Input"/>
          </RequiredProperties>
        </DataTypeQueryDomain>
        <Documentation>
          Property to set the placeholder data type.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Get/Set the visibility of the
        representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            name="ColorArrayName"
                            no_custom_default="1"
                            number_of_elements="5">
        <Documentation>
          Set the array to color with. One must specify the field association and
          the array name of the array. If the array is missing, scalar coloring will
          automatically be disabled.
        </Documentation>
        <RepresentedArrayListDomain name="array_list"
                                    input_domain_name="input_array_any">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <IntVectorProperty command="SetColorMissingArraysWithNanColor"
                         default_values="0"
                         name="UseNanColorForMissingArrays"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If any leaves of a composite dataset are missing the
          color array (that is, the composite dataset has a partial array),
          the datasets with missing data will be colored using the NaN value
          set in the color table. Otherwise, the specified Ambient and
          Diffuse colors will be used.
        </Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetRepresentation"
                            default_values="Surface"
                            name="Representation"
                            panel_widget="display_representation_selector"
                            number_of_elements="1">
        <StringListDomain name="string_list">
          <String value="Points" />
          <String value="Wireframe" />
          <String value="Surface" />
          <String value="Surface With Edges" />
        </StringListDomain>
      </StringVectorProperty>
      <IntVectorProperty command="SetCoordinateShiftScaleMethod"
                         default_values="2"
                         name="CoordinateShiftScaleMethod"
                         number_of_elements="1">
        <Documentation>Options for normalizing the point coordinates.
        The points are sent to the GPU as float data which can result in resolution issues
        due to the limited precision of float. VTK includes a variety of methods to normalize
        the point coordinates prior to sending them to the GPU. Auto shift scale is a good
        setting that should work for most datasets. Focal point shift scale works based
        on the current camera viewpoint which makes it the most robust setting but it
        will renormalize the data occasionally as the camera's settings change which
        requires reuploading the data to the GPU so there may be a performance cost.
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry text="Disable"
                 value="0" />
          <Entry text="Auto Shift Scale"
                 value="1" />
          <Entry text="Always Auto Shift Scale"
                 value="2" />
          <Entry text="Auto Shift Only"
                 value="4" />
          <Entry text="Near Focal Plane Shift Scale"
                 value="5" />
          <Entry text="Focal Point Shift Scale"
                 value="6" />
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty command="SetTCoordArray"
                            default_values=""
                            label="Texture Coordinates"
                            name="SelectTCoordArray"
                            number_of_elements="1">
        <Documentation>
          Set the texture coordinates array used for texture mapping.
        </Documentation>
        <RepresentedArrayListDomain attribute_type="TCoords"
                         input_domain_name="input_array_point_2"
                         data_type="VTK_FLOAT VTK_DOUBLE"
                         name="array_list"
                         none_string="None">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetNormalArray"
                            default_values=""
                            label="Normal Array"
                            name="SelectNormalArray"
                            number_of_elements="1">
        <Documentation>
          Set the normal array used for smooth shading.
        </Documentation>
        <RepresentedArrayListDomain attribute_type="Normals"
                         input_domain_name="input_array_point_3"
                         data_type="VTK_FLOAT VTK_DOUBLE"
                         name="array_list"
                         none_string="None">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetTangentArray"
                            default_values=""
                            label="Tangent Array"
                            name="SelectTangentArray"
                            number_of_elements="1">
        <Documentation>
          Set the tangent coordinates array used for normal mapping.
        </Documentation>
        <RepresentedArrayListDomain attribute_type="Tangents"
                         input_domain_name="input_array_point_3"
                         data_type="VTK_FLOAT VTK_DOUBLE"
                         name="array_list"
                         none_string="None">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <IntVectorProperty command="SetDisableLighting"
                      default_values="0"
                      name="DisableLighting"
                      number_of_elements="1">
        <Documentation>
          Disables the render view lighting interactions on this object.
          It only shows the diffuse lighting component of the object.
        </Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty command="SetAmbient"
                            default_values="0.0"
                            name="Ambient"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuse"
                            default_values="1.0"
                            name="Diffuse"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecular"
                            default_values="0.0"
                            name="Specular"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetRoughness"
                            default_values="0.3"
                            name="Roughness"
                            number_of_elements="1">
        <Documentation>
          Set how rough is the surface.
        </Documentation>
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetMetallic"
                            default_values="0.0"
                            name="Metallic"
                            number_of_elements="1">
        <Documentation>
          Set metalness of the surface. It is usually either 0 or 1 but any value is valid.
        </Documentation>
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetEdgeTint"
                            default_values="1.0 1.0 1.0"
                            name="EdgeTint"
                            number_of_elements="3">
        <Documentation>
          For metals only. Set the tint at grazing angles.
        </Documentation>
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                          name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetBaseIOR"
                            default_values="1.5"
                            name="BaseIOR"
                            number_of_elements="1">
        <Documentation>
          Set the index of refraction of the base layer.
        </Documentation>
        <DoubleRangeDomain max="4"
                           min="1"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetCoatIOR"
                            default_values="2.0"
                            name="CoatIOR"
                            number_of_elements="1">
        <Documentation>
          Set the index of refraction of the coat layer.
        </Documentation>
        <DoubleRangeDomain max="4"
                           min="1"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetCoatStrength"
                            default_values="0.0"
                            name="CoatStrength"
                            number_of_elements="1">
        <Documentation>
          Set the strength of the coat layer.
        </Documentation>
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetCoatRoughness"
                            default_values="0.0"
                            name="CoatRoughness"
                            number_of_elements="1">
        <Documentation>
          Set the roughness of the coat layer.
        </Documentation>
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>

      <DoubleVectorProperty command="SetCoatColor"
                            default_values="1.0 1.0 1.0"
                            name="CoatColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetAnisotropy"
                            default_values="0.0"
                            name="Anisotropy"
                            number_of_elements="1">
        <Documentation>
          Set the anisotropy coefficient of the surface.
        </Documentation>
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
          <!-- Enable widget only if normals and tangents are here -->
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state" property="SelectNormalArray" value="None" inverse="1"/>
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state" property="SelectTangentArray" value="None" inverse="1"/>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetAnisotropyRotation"
                            default_values="0.0"
                            name="AnisotropyRotation"
                            number_of_elements="1">
        <Documentation>
          Set the anisotropy rotation coefficient of the surface.
        </Documentation>
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
          <!-- Enable widget only if normals and tangents are here -->
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state" property="SelectNormalArray" value="None" inverse="1"/>
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state" property="SelectTangentArray" value="None" inverse="1"/>
        </Hints>
      </DoubleVectorProperty>
      <ProxyProperty command="SetTexture"
                     name="Texture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the diffuse color texture.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3"
                                   inverse="1" />
          <TextureSelectorWidget check_tcoords="1" />
          <!-- enable the texture selector only when tcoords is available. -->
        </Hints>
        <Documentation>
          This property allows you to specify the texture to apply to the surface.
        </Documentation>
      </ProxyProperty>
      <IntVectorProperty command="SetRepeatTextures"
                         default_values="1"
                         name="RepeatTextures"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Should textures be clamped or repeated when texture coordinates go
          outside the range of 0 to 1.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetInterpolateTextures"
                         default_values="0"
                         name="InterpolateTextures"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          When sampling a texture should linear interpolations be used. If false
          then nearest neighbor sampling will be used.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetUseMipmapTextures"
                         default_values="0"
                         name="UseMipmapTextures"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Should mipmaps be used for textures. Mipmaps are espcially useful when
          working with large detailed textures or situations where you might be
          viewing a texture map from far away.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="InterpolateTextures"
                                   value="1" />
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetShowTexturesOnBackface"
                         default_values="1"
                         name="ShowTexturesOnBackface"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Should textures be applied to the backface of a surface.
        </Documentation>
      </IntVectorProperty>
      <ProxyProperty command="SetBaseColorTexture"
                     name="BaseColorTexture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the base color (also called albedo) texture. It will define the diffuse color for a
          non metallic surface or the specular color for a metallic surface.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
          <TextureSelectorWidget check_tcoords="1" />
          <!-- enable the texture selector only when tcoords is available. -->
        </Hints>
      </ProxyProperty>
      <ProxyProperty command="SetMaterialTexture"
                     name="MaterialTexture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the material texture. This texture encodes occlusion, roughness and metalness
          on the red, green, blue channel respectively.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
          <TextureSelectorWidget check_tcoords="1" />
          <!-- enable the texture selector only when tcoords is available. -->
        </Hints>
      </ProxyProperty>
      <ProxyProperty command="SetAnisotropyTexture"
                     name="AnisotropyTexture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the anisotropy texture. This texture encodes anisotropy strength on the red and anisotropy rotation
          on the green channel.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
          <TextureSelectorWidget check_tcoords="1" check_tangents="1" />
          <!-- enable the texture selector only when tcoords and tangents are available. -->
        </Hints>
      </ProxyProperty>
      <DoubleVectorProperty command="SetOcclusionStrength"
                            default_values="1.0"
                            name="OcclusionStrength"
                            number_of_elements="1">
        <Documentation>
          Set the ambient occlusion strength of the material texture.
        </Documentation>
        <DoubleRangeDomain max="5"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="MaterialTexture"
                                   value="null"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <ProxyProperty command="SetNormalTexture"
                     name="NormalTexture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the normal mapping texture.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="0"
                                   inverse="1" />
          <TextureSelectorWidget check_tcoords="1" check_tangents="1" />
          <!-- enable the texture selector only when tcoords is available. -->
        </Hints>
      </ProxyProperty>
      <DoubleVectorProperty command="SetNormalScale"
                            default_values="1.0"
                            name="NormalScale"
                            number_of_elements="1">
        <Documentation>
          Set the scale of normal mapping deviation.
        </Documentation>
        <DoubleRangeDomain max="5"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="NormalTexture"
                                   value="null"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <ProxyProperty command="SetCoatNormalTexture"
                     name="CoatNormalTexture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the coat normal mapping texture.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="0"
                                   inverse="1" />
          <TextureSelectorWidget check_tcoords="1" check_tangents="1" />
          <!-- enable the texture selector only when tcoords is available. -->
        </Hints>
      </ProxyProperty>
      <DoubleVectorProperty command="SetCoatNormalScale"
                            default_values="1.0"
                            name="CoatNormalScale"
                            number_of_elements="1">
        <Documentation>
          Set the scale of coat normal mapping deviation.
        </Documentation>
        <DoubleRangeDomain max="5"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="CoatNormalTexture"
                                   value="null"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <ProxyProperty command="SetEmissiveTexture"
                     name="EmissiveTexture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the emissive texture.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
          <TextureSelectorWidget check_tcoords="1" />
          <!-- enable the texture selector only when tcoords is available. -->
        </Hints>
      </ProxyProperty>
      <DoubleVectorProperty command="SetEmissiveFactor"
                            default_values="1.0 1.0 1.0"
                            name="EmissiveFactor"
                            number_of_elements="3">
        <Documentation>
          Set the factor of the red, green, blue channels of the emissive texture.
        </Documentation>
        <DoubleRangeDomain max="10"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="EmissiveTexture"
                                   value="null"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <ProxyProperty command="SetTextureTransform"
                     name="TextureTransform"
                     null_on_empty="1">
        <ProxyGroupDomain name="groups">
          <Group name="transforms"/>
        </ProxyGroupDomain>
        <ProxyListDomain name="proxy_list">
          <Proxy group="extended_sources"
                 name="Transform2"/>
        </ProxyListDomain>
        <Hints>
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="or">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="Texture"
                                       value="null"
                                       inverse="1"/>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="BaseColorTexture"
                                       value="null"
                                       inverse="1"/>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="NormalTexture"
                                       value="null"
                                       inverse="1"/>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="CoatNormalTexture"
                                       value="null"
                                       inverse="1"/>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="MaterialTexture"
                                       value="null"
                                       inverse="1"/>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="AnisotropyTexture"
                                       value="null"
                                       inverse="1"/>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EmissiveTexture"
                                       value="null"
                                       inverse="1"/>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>
          Set the texture transform for the textures.
        </Documentation>
      </ProxyProperty>
      <IntVectorProperty command="SetCoordinateSystem"
                         default_values="0"
                         name="CoordinateSystem"
                         number_of_elements="1">
        <Documentation>Specify the coordinate system that this prop is relative to. This defaults
          to world but can be set to physical.  Representations in the PHYSICAL coordinate
          system are automatically transformed by the PhysicalToWorldMatrix.  In HMD-based
          displays, this has the effect of fixing the object with respect to the display.  In
          general, the PhysicalToWorldMatrix does not necessarily correspond to the coordinate
          system of the display, but can be used for similar purposes.
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry text="Navigable"
                 value="0" />
          <Entry text="Fixed"
                 value="1" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetSuppressLOD"
                         default_values="0"
                         name="SuppressLOD"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty command="SetAmbientColor"
                            default_values="1.0 1.0 1.0"
                            name="AmbientColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="ForegroundColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuseColor"
                            default_values="1.0 1.0 1.0"
                            name="DiffuseColor"
                            number_of_elements="3"
                            panel_widget="color_selector_with_palette">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="SurfaceColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularColor"
                            default_values="1.0 1.0 1.0"
                            name="SpecularColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLineWidth"
                            default_values="1.0"
                            name="LineWidth"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPointSize"
                            default_values="2.0"
                            name="PointSize"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetRenderLinesAsTubes"
                         default_values="0"
                         name="RenderLinesAsTubes"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>
          When set, all lines are rendered as 3D tubes, if supported by OpenGL driver.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetRenderPointsAsSpheres"
                         default_values="0"
                         name="RenderPointsAsSpheres"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>
          When set, all points are rendered as 3D spheres, if supported by OpenGL driver.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetInterpolation"
                         default_values="1"
                         name="Interpolation"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Flat"
                 value="0" />
          <Entry text="Gouraud"
                 value="1" />
          <Entry text="PBR"
                 value="3" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetTriangulate"
                         default_values="0"
                         name="Triangulate"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Triangulate the geometry internally to avoid rendering
        issues of non-convex polygons. This feature has a processing and memory
        cost, it should be enabled only when needed.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetUseShaderReplacements"
                         default_values="0"
                         name="UseShaderReplacements"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Enable the use of shader replacements.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetShaderReplacements"
                            default_values=""
                            name="ShaderReplacements"
                            number_of_elements="1"
                            panel_widget="shader_replacements_selector"
                            panel_visibility="advanced">
        <Documentation>
          Specify shader replacements using a Json string.
          The Json string can be a single node or an array of nodes with the
          following properties:&#xa;
            "type": specifies the type of shader the replacement is about.
              It can be either "vertex", "fragment" or "geometry".&#xa;
            "original": specifies the original string to be replaced in the shader code.
              This string is generally a pattern defined by the mapper
              vtkOpenGLPolyDataMapper at specific locations of the shader
              GLSL source code.&#xa;
            "replacement": specifies the replacement string in GLSL source code.
              Note that the Json parser supports multiple lines entries.&#xa;
          Example of a simple shader replacement (draw all the fragments in full red
          color without any shading consideration):&#xa;
            {&#xa;
             "type": "fragment",&#xa;
             "original": "//VTK::Light::Impl",&#xa;
             "replacement": "gl_FragData[0]=vec4(1.0,0.0,0.0,1.0);"&#xa;
           }&#xa;
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="UseShaderReplacements"
                                   value="1" />
          <!-- show this widget when UseShaderReplacements is enabled -->
        </Hints>
      </StringVectorProperty>
      <IntVectorProperty command="SetNonlinearSubdivisionLevel"
                         default_values="1"
                         name="NonlinearSubdivisionLevel"
                         number_of_elements="1">
        <IntRangeDomain max="4"
                        min="0"
                        name="range" />
      </IntVectorProperty>
      <IntVectorProperty command="SetMatchBoundariesIgnoringCellOrder"
                         default_values="0"
                         name="MatchBoundariesIgnoringCellOrder"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Only account for cell corners (topology) to detect
          if two adjacent cells are connected.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty command="SetComputePointNormals"
                         default_values="0"
                         name="ComputePointNormals"
                         number_of_elements="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          When enabled, and point normals are not present, they will be computed.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty command="SetSplitting"
                         default_values="1"
                         name="Splitting"
                         number_of_elements="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          This property controls the splitting of sharp edges. If
          sharp edges are split (property value = 1), then points are duplicated
          along these edges, and separate normals are computed for both sets of
          points to give crisp (rendered) surface definition.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="enabled_state"
                                   property="ComputePointNormals"
                                   value="1"/>
          <!-- show this widget when ComputePointNormals==1 -->
        </Hints>
      </IntVectorProperty>

      <DoubleVectorProperty command="SetFeatureAngle"
                            default_values="30"
                            name="FeatureAngle"
                            number_of_elements="1">
        <DoubleRangeDomain max="180"
                           min="0"
                           name="range"/>
        <Documentation>
          The value of this property defines a feature edge. If
          the surface normal between two adjacent triangles is at least as large
          as this Feature Angle, a feature edge exists. If Splitting is on,
          points are duplicated along these feature edges. (See the Splitting property.)
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <!-- Show when ComputePointNormals is on -->
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="enabled_state"
                                       property="ComputePointNormals"
                                       value="1"/>
              <!-- Show when Splitting is on -->
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="enabled_state"
                                       property="Splitting"
                                       value="1"/>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>

      <DoubleVectorProperty command="SetOpacity"
                            default_values="1.0"
                            name="Opacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularPower"
                            default_values="100.0"
                            name="SpecularPower"
                            number_of_elements="1">
        <DoubleRangeDomain max="100"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLuminosity"
                            default_values="0.0"
                            name="Luminosity"
                            number_of_elements="1">
        <DoubleRangeDomain max="100.0"
                           min="0"
                           name="range" />
        <Documentation>Makes the object emit light.
        Only takes effect with OSPRay's path traced renderer.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="EnableOSPRay"
                                   values="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetEdgeColor"
                            default_values="0 0 0.5"
                            name="EdgeColor"
                            number_of_elements="3">
        <Documentation>Set the edge color. This color is used to draw the edge
        for the polygonal data when EdgeVisibility is on.</Documentation>
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="EdgeColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetEdgeOpacity"
                            default_values="1.0"
                            name="EdgeOpacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetInteractiveSelectionColor"
                            default_values="0.5 0.0 1.0"
                            name="InteractiveSelectionColor"
                            number_of_elements="3">
        <Documentation>Set the preselection color. This color is used to draw the edge
        of the current preselection.</Documentation>
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="InteractiveSelectionColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            label="Translation"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0 0 0"
                            name="Origin"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>

      <DoubleVectorProperty argument_is_array="1"
                            command="SetUserTransform"
                            default_values="1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1"
                            name="UserTransform"
                            number_of_elements="16">
        <Documentation>
          In addition to the instance variables such as position and
          orientation, you can add an additional transformation for your own
          use. This transformation is concatenated with the actor's internal
          transformation, which you implicitly create through the use of
          Position, Origin, Orientation. The value is 4x4 matrix for the linear
          transform to use.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty command="SetPickable"
                         default_values="1"
                         name="Pickable"
                         number_of_elements="1">
        <Hints>
          <NoDefault />
        </Hints>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <ProxyProperty command="SetLookupTable"
                     name="LookupTable" >
        <Documentation>Set the lookup-table to use to map data array to colors.
        Lookuptable is only used with MapScalars to ON.</Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="lookup_tables" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <IntVectorProperty default_values="0"
                         name="UseSeparateColorMap"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>By default, ParaView shares a single color map among all datasets colored
        by arrays that have the same name. When this option is enabled, the active dataset will
        be assigned a separate color map not shared by other datasets.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetMapScalars"
                         default_values="1"
                         name="MapScalars"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When enabled, LookupTable will always be
        used for scalar mapping. Otherwise, when up to 4 component
        scalars are present, the components are clamped to a valid
        color interval (0-255 for an integral type and 0.0-1.0 for a
        floating point type) and then directly used as
        color.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty default_values="0"
                         name="MultiComponentsMapping"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Enable multi components mapping. For a two-components array,
        the first component is mapped to the color, the second component is mapped to the
        opacity. For a four-components array, the first, second and third components are used as
        RGB values and the fourth component is mapped to the opacity. Only available
        when MapScalars is ON. This feature forces "Separate Color Map" and scales the color and
        the opacity range with the correct component.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Representation"
                                   value="Volume" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="MapScalars"
                                   value="1" />
          <PropertyWidgetDecorator type="MultiComponentsDecorator"
                                   components="2 4" />
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetInterpolateScalarsBeforeMapping"
                         default_values="1"
                         name="InterpolateScalarsBeforeMapping"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When set to true (default), texture coordinates
        are sent to and interpolated by the graphics card. This is
        equivalent with interpolating scalars and then mapping them to
        obtain colors between points. Otherwise, colors are sent to
        and interpolated by the graphics card.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetSeamlessU"
                         default_values="0"
                         name="SeamlessU"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>This parameter prevents seams in the U direction in
          the parameterization space. It should be used when using a cylindrical
          or toroidal parameterization on the surface.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetSeamlessV"
                         default_values="0"
                         name="SeamlessV"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>This parameter prevents seams in the V direction in
          the parameterization space. It should be used when using a cylindrical
          or toroidal parameterization on the surface.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetStatic"
                         default_values="0"
                         name="StaticMode"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <StringVectorProperty name="Assembly"
        command="SetActiveAssembly"
        number_of_elements="1"
        default_values=""
        panel_visibility="multiblock_inspector">
        <DataAssemblyListDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </DataAssemblyListDomain>
        <Documentation>
          Select which assembly is used when specify selectors
          to choose block visibilities, block colors, etc. for composite datasets.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="SelectedBlockSelectors"
                            repeat_command="1"
                            number_of_elements_per_command="1"
                            number_of_elements="1"
                            default_values=""
                            panel_visibility="multiblock_inspector">
        <DataAssemblyDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input"/>
            <Property function="ActiveAssembly" name="Assembly"/>
          </RequiredProperties>
        </DataAssemblyDomain>
        <Hints>
          <NoDefault/>
        </Hints>
        <Documentation>
          Used by the multiblock inspector to track the selected block selectors.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="BlockSelectors"
                            command="AddBlockSelector"
                            clean_command="RemoveAllBlockSelectors"
                            repeat_command="1"
                            number_of_elements_per_command="1"
                            panel_visibility="multiblock_inspector"
                            number_of_elements="1"
                            default_values="/">
        <DataAssemblyDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="ActiveAssembly" name="Assembly" />
          </RequiredProperties>
        </DataAssemblyDomain>
        <Documentation>
          For composite datasets, specify selectors to limit the view
          to a chosen subset of blocks.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="BlockColors"
                            command="SetBlockColor"
                            clean_command="RemoveAllBlockColors"
                            element_types="2 1 1 1"
                            number_of_elements_per_command="4"
                            repeat_command="1"
                            panel_visibility="multiblock_inspector">
         <DataAssemblyDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="ActiveAssembly" name="Assembly" />
          </RequiredProperties>
        </DataAssemblyDomain>
        <Hints>
          <NoDefault/>
        </Hints>
        <Documentation>
          For composite datasets, specify colors associated with selectors
          on the assembly chosen using **Assembly**.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="BlockColorArrayNames"
                            command="SetBlockArrayName"
                            clean_command="RemoveAllBlockArrayNames"
                            element_types="2 0 2"
                            number_of_elements_per_command="3"
                            repeat_command="1"
                            panel_visibility="multiblock_inspector">
        <RepresentedArrayListDomain name="array_list" input_domain_name="input_array_any">
          <RequiredProperties>
            <Property function="Input" name="Input"/>
            <Property function="ActiveAssembly" name="Assembly"/>
            <Property function="Selectors" name="SelectedBlockSelectors"/>
          </RequiredProperties>
        </RepresentedArrayListDomain>
        <Documentation>
          For composite datasets, specify the color array name associated with selectors
          on the assembly chosen using **Assembly**.
        </Documentation>
        <Hints>
          <NoDefault/>
        </Hints>
      </StringVectorProperty>

      <ProxyProperty command="SetBlockLookupTable"
                     name="BlockLookupTables"
                     clean_command="RemoveAllBlockLookupTables"
                     repeat_command="1"
                     panel_visibility="multiblock_inspector">
        <ProxyGroupDomain name="groups">
          <Group name="lookup_tables"/>
        </ProxyGroupDomain>
        <Hints>
          <NoDefault/>
        </Hints>
        <Documentation>
          Set the block lookup-table to use to map data array to colors.
          Lookup table is only used with MapScalars to ON or BlockMapScalars to ON.
        </Documentation>
      </ProxyProperty>

      <StringVectorProperty name="BlockUseSeparateColorMaps"
                            element_types="2 0"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            panel_visibility="multiblock_inspector">
        <DataAssemblyDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input"/>
            <Property function="ActiveAssembly" name="Assembly"/>
          </RequiredProperties>
        </DataAssemblyDomain>
        <Hints>
          <NoDefault/>
        </Hints>
        <Documentation>
          By default, ParaView shares a single color map among all datasets colored
          by arrays that have the same name. When this option is enabled, the block of the active dataset will
          be assigned a separate color map not shared by other blocks or datasets.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="BlockMapScalars"
                            command="SetBlockMapScalars"
                            clean_command="RemoveAllBlockMapScalars"
                            element_types="2 0"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            panel_visibility="multiblock_inspector">
        <DataAssemblyDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input"/>
            <Property function="ActiveAssembly" name="Assembly"/>
          </RequiredProperties>
        </DataAssemblyDomain>
        <Hints>
          <NoDefault/>
        </Hints>
        <Documentation>
          For composite datasets, specify if to map scalars associated with selectors
          on the assembly chosen using **Assembly**.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="BlockInterpolateScalarsBeforeMappings"
                            command="SetBlockInterpolateScalarsBeforeMapping"
                            clean_command="RemoveAllBlockInterpolateScalarsBeforeMappings"
                            element_types="2 0"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            panel_visibility="multiblock_inspector">
        <DataAssemblyDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input"/>
            <Property function="ActiveAssembly" name="Assembly"/>
          </RequiredProperties>
        </DataAssemblyDomain>
        <Hints>
          <NoDefault/>
        </Hints>
        <Documentation>
          For composite datasets, specify if to interpolate scalars before mapping associated with selectors
          on the assembly chosen using **Assembly**.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="BlockOpacities"
                            command="SetBlockOpacity"
                            clean_command="RemoveAllBlockOpacities"
                            element_types="2 1"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            panel_visibility="multiblock_inspector">
         <DataAssemblyDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="ActiveAssembly" name="Assembly" />
          </RequiredProperties>
        </DataAssemblyDomain>
        <Hints>
          <NoDefault/>
        </Hints>
        <Documentation>
          For composite datasets, specify opacities associated with selectors
          on the assembly chosen using **Assembly**.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty default_values="1"
                         label="Map Scalars"
                         name="BlockMapScalarsGUI"
                         number_of_elements="1"
                         panel_visibility="multiblock_properties">
        <BooleanDomain name="bool"/>
        <Documentation>
          For composite datasets, specify if to map scalars associated with selectors
          on the assembly chosen using **Assembly**.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty default_values="1"
                         label="Interpolate Scalars Before Mapping"
                         name="BlockInterpolateScalarsBeforeMappingsGUI"
                         number_of_elements="1"
                         panel_visibility="multiblock_properties">
        <BooleanDomain name="bool"/>
        <Documentation>
          For composite datasets, specify if to interpolate scalars before mapping associated with selectors
          on the assembly chosen using **Assembly**.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty default_values="1.0"
                            label="Opacity"
                            name="BlockOpacitiesGUI"
                            number_of_elements="1"
                            panel_visibility="multiblock_properties">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range"/>
        <Documentation>
          For composite datasets, specify opacities associated with selectors
          on the assembly chosen using **Assembly**.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty command="SetBlockColorsDistinctValues"
                         default_values="7"
                         name="BlockColorsDistinctValues"
                         number_of_elements="1"
                         panel_visibility="never">
        <Documentation>
          Determines the number of distinct values in
          vtkBlockColors. This array is added to each block if
          the dataset is a composite dataset. The array has one value
          set to (blockIndex % BlockColorsDistinctValues)
        </Documentation>
        <IntRangeDomain min="2" name="range" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="GeneralSettings"
                        property="BlockColorsDistinctValues"/>
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetUseDataPartitions"
                         default_values="0"
                         name="UseDataPartitions"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Specify whether or not to redistribute the data when actor is translucent.
        Default is false.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetEnableScaling"
                         default_values="0"
                         name="OSPRayUseScaleArray"
                         label="Scaling Mode"
                         number_of_elements="1">
        <Documentation>
          Choose how the size of each sphere and cylinder is determined.
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry text="All Exact"
                 value="-1" />
          <Entry text="All Approximate"
                 value="0" />
          <Entry text="Each Scaled"
                 value="1" />
          <Entry text="Each Exact"
                 value="2" />
        </EnumerationDomain>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
        </Hints>
      </IntVectorProperty>
      <StringVectorProperty command="SetScalingArrayName"
                            default_values=""
                            name="OSPRayScaleArray"
                            label="Scale Array"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <ArrayListDomain input_domain_name="input_array_point"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          Choice of an array for OSPRay implicit points and lines sizes.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="OSPRayUseScaleArray"
                                   values="1" />
        </Hints>
      </StringVectorProperty>
      <ProxyProperty command="SetScalingFunction"
                     name="OSPRayScaleFunction"
                     label="Scale Function"
                     panel_visibility="advanced"
                     panel_widget="transfer_function_editor" >
        <Documentation>Set the piecewise function used to map data array to sprite size.
        ScaleTransferFunction is only used if ScaleByArray is set.</Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="piecewise_functions" />
        </ProxyGroupDomain>
        <ProxyListDomain name="proxy_list">
          <Proxy group="piecewise_functions"
                 name="PiecewiseFunction" />
        </ProxyListDomain>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="OSPRayUseScaleArray"
                                   values="1" />
        </Hints>
      </ProxyProperty>
      <StringVectorProperty command="SetMaterial"
                            name="OSPRayMaterial"
                            label="Material"
                            number_of_elements="1"
                            panel_visibility="advanced"
                            default_values="None">
        <Documentation>Set the material to paint this object with.</Documentation>
        <MaterialDomain name="string_list">
        </MaterialDomain>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
        </Hints>
      </StringVectorProperty>

      <!-- End of SurfaceRepresentationBase -->
    </RepresentationProxy>
  </ProxyGroup>
</ServerManagerConfiguration>
