# Application should exit when this script is finished.
Application ExitOnReturnOn

if {[info exists argc]} { 
    set argcm1 [expr $argc - 1]
    for {set i 0} {$i < $argcm1} {incr i} {
        if {[lindex $argv $i] == "-D" && $i < $argcm1} {
		set DataDir [lindex $argv [expr $i + 1]]
        }
    }
} 

# Disable popup message dialogs.
set kw(vtkTemp1) [Application GetMainWindow]
$kw(vtkTemp1) SetUseMessageDialog 0

# Open the AltIO package.
$kw(vtkTemp1) OpenPackage "$DataDir/Data/vtkAltIOPackage.xml"

# Open an unstructured grid data set.
$kw(vtkTemp1) Open "$DataDir/Data/vox8_bin.vtk"

# Choose the file name/type based on whether we are in parallel mode.
set kw(vtkTemp1000) [Application GetController]
set nprocs [$kw(vtkTemp1000) GetNumberOfProcesses]

set fileName "testUnstructuredGrid.vtu"
if {$nprocs > 1} { set fileName "testUnstructuredGrid.pvtu" }

# Write the vtkUnstructuredGrid.
$kw(vtkTemp1) WriteVTKFile $fileName

# Delete the old pipeline.
set kw(vtkTemp257) [$kw(vtkTemp1) GetCurrentPVSource]
$kw(vtkTemp257) DeleteCallback

# Read the vtkUnstructuredGrid from the temporary file.
$kw(vtkTemp1) Open $fileName
set kw(vtkTemp291) [vtkTemp1 GetCurrentPVSource]
update

# Fix the size of the image.
RenWin1 SetSize 300 300
RenWin1 Render
update

for {set i  1} {$i < [expr $argc - 1]} {incr i} {
    if {[lindex $argv $i] == "-C"} {
	source [lindex $argv [expr $i + 1]]
	$Application SetExitStatus [CompareImage [[Application GetMainWindow] GetMainView]]
    }
}

# Delete the temporary file.
catch { file delete -force $fileName }
