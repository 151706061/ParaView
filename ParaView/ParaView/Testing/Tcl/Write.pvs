$Application ExitOnReturnOn
if {[info exists argc]} { 
    set argcm1 [expr $argc - 1]
    for {set i 0} {$i < $argcm1} {incr i} {
        if {[lindex $argv $i] == "-D" && $i < $argcm1} {
		set DataDir [lindex $argv [expr $i + 1]]
        }
    }
} 

# Disable popup message dialogs.
set kw(vtkTemp1) [$Application GetMainWindow]
$kw(vtkTemp1) SetUseMessageDialog 0

# hack to get the window.
set pvWindow [lindex [vtkPVWindow ListInstances] 0]

# Choose the file name/type based on whether we are in parallel mode.
set kw(vtkTemp1000) [$Application GetController]
set nprocs [$kw(vtkTemp1000) GetNumberOfProcesses]

set ext "vtk"
if {$nprocs > 1} { set ext "pvtk" }

$pvWindow Open "$DataDir/Data/blow.vtk"
if { [catch {
  $pvWindow DisableMenus
  $pvWindow ShowAnimationProperties
  $pvWindow ShowCurrentSourceProperties
  $pvWindow EnableMenus
  $pvWindow WriteVTKFile vtkParaViewWriteTest.$ext
  $pvWindow WriteVTKFile vtkParaViewWriteTestGhost.$ext 3
  
  # Barrier after write.  We don't want to delete files before they
  # are written.
  $Application BroadcastSimpleScript { [$Application GetController] Barrier }

  file delete -force vtkParaViewWriteTest.$ext
  file delete -force vtkParaViewWriteTestGhost.$ext

  
  if {$nprocs > 1} {
    # Delete the temporary file's pieces.
    for {set i 0} { $i < $nprocs } { incr i } {
      catch { file delete -force "vtkParaViewWriteTest.$i.vtk" }
      catch { file delete -force "vtkParaViewWriteTestGhost.$i.vtk" }
    }
  }

  $pvWindow SaveInTclScript vtkParaViewWriteTest.tcl 1 1
  file delete -force vtkParaViewWriteTest.tcl
} res ] != 0 } {
	puts "Error: $res"
	$Application SetExitStatus 1
}

$Application Exit
