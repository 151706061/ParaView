$Application ExitOnReturnOn

if {[info exists argc]} { 
    set argcm1 [expr $argc - 1]
    for {set i 0} {$i < $argcm1} {incr i} {
        if {[lindex $argv $i] == "-D" && $i < $argcm1} {
		set DataDir [lindex $argv [expr $i + 1]]
        }
    }
} 


set kw(vtkTemp1) [$Application GetMainWindow]
set kw(vtkTemp17) [$kw(vtkTemp1) GetMainView]
set kw(vtkTemp544) [$kw(vtkTemp1) CreatePVSource RTAnalyticSource]
set kw(vtkTemp550) [$kw(vtkTemp544) GetPVWidget {WholeExtent}]
$kw(vtkTemp550) SetValue -10 -2 -10 10 -10 10
set kw(vtkTemp558) [$kw(vtkTemp544) GetPVWidget {Center}]
$kw(vtkTemp558) SetValue 0 0 0
set kw(vtkTemp563) [$kw(vtkTemp544) GetPVWidget {Maximum}]
$kw(vtkTemp563) SetValue 255
set kw(vtkTemp566) [$kw(vtkTemp544) GetPVWidget {XFreq}]
$kw(vtkTemp566) SetValue 60
set kw(vtkTemp569) [$kw(vtkTemp544) GetPVWidget {YFreq}]
$kw(vtkTemp569) SetValue 30
set kw(vtkTemp572) [$kw(vtkTemp544) GetPVWidget {ZFreq}]
$kw(vtkTemp572) SetValue 40
set kw(vtkTemp575) [$kw(vtkTemp544) GetPVWidget {XMag}]
$kw(vtkTemp575) SetValue 10
set kw(vtkTemp578) [$kw(vtkTemp544) GetPVWidget {YMag}]
$kw(vtkTemp578) SetValue 18
set kw(vtkTemp581) [$kw(vtkTemp544) GetPVWidget {ZMag}]
$kw(vtkTemp581) SetValue 5
set kw(vtkTemp584) [$kw(vtkTemp544) GetPVWidget {StandardDeviation}]
$kw(vtkTemp584) SetValue 0.5
$kw(vtkTemp544) AcceptCallback
set kw(vtkTemp597) [$kw(vtkTemp544) GetPVOutput]
$kw(vtkTemp597) ColorByPointField {RTData} 1
set kw(vtkTemp743) [$kw(vtkTemp1) CreatePVSource RTAnalyticSource]
set kw(vtkTemp749) [$kw(vtkTemp743) GetPVWidget {WholeExtent}]
$kw(vtkTemp749) SetValue -2 2 -10 10 -10 10
set kw(vtkTemp757) [$kw(vtkTemp743) GetPVWidget {Center}]
$kw(vtkTemp757) SetValue 0 0 0
set kw(vtkTemp762) [$kw(vtkTemp743) GetPVWidget {Maximum}]
$kw(vtkTemp762) SetValue 255
set kw(vtkTemp765) [$kw(vtkTemp743) GetPVWidget {XFreq}]
$kw(vtkTemp765) SetValue 60
set kw(vtkTemp768) [$kw(vtkTemp743) GetPVWidget {YFreq}]
$kw(vtkTemp768) SetValue 30
set kw(vtkTemp771) [$kw(vtkTemp743) GetPVWidget {ZFreq}]
$kw(vtkTemp771) SetValue 40
set kw(vtkTemp774) [$kw(vtkTemp743) GetPVWidget {XMag}]
$kw(vtkTemp774) SetValue 10
set kw(vtkTemp777) [$kw(vtkTemp743) GetPVWidget {YMag}]
$kw(vtkTemp777) SetValue 18
set kw(vtkTemp780) [$kw(vtkTemp743) GetPVWidget {ZMag}]
$kw(vtkTemp780) SetValue 5
set kw(vtkTemp783) [$kw(vtkTemp743) GetPVWidget {StandardDeviation}]
$kw(vtkTemp783) SetValue 0.5
$kw(vtkTemp743) AcceptCallback
set kw(vtkTemp796) [$kw(vtkTemp743) GetPVOutput]
$kw(vtkTemp796) ColorByPointField {RTData} 1
set kw(vtkTemp890) [$kw(vtkTemp1) CreatePVSource RTAnalyticSource]
set kw(vtkTemp896) [$kw(vtkTemp890) GetPVWidget {WholeExtent}]
$kw(vtkTemp896) SetValue 2 10 -10 10 -10 10
set kw(vtkTemp904) [$kw(vtkTemp890) GetPVWidget {Center}]
$kw(vtkTemp904) SetValue 0 0 0
set kw(vtkTemp909) [$kw(vtkTemp890) GetPVWidget {Maximum}]
$kw(vtkTemp909) SetValue 255
set kw(vtkTemp912) [$kw(vtkTemp890) GetPVWidget {XFreq}]
$kw(vtkTemp912) SetValue 60
set kw(vtkTemp915) [$kw(vtkTemp890) GetPVWidget {YFreq}]
$kw(vtkTemp915) SetValue 30
set kw(vtkTemp918) [$kw(vtkTemp890) GetPVWidget {ZFreq}]
$kw(vtkTemp918) SetValue 40
set kw(vtkTemp921) [$kw(vtkTemp890) GetPVWidget {XMag}]
$kw(vtkTemp921) SetValue 10
set kw(vtkTemp924) [$kw(vtkTemp890) GetPVWidget {YMag}]
$kw(vtkTemp924) SetValue 18
set kw(vtkTemp927) [$kw(vtkTemp890) GetPVWidget {ZMag}]
$kw(vtkTemp927) SetValue 5
set kw(vtkTemp930) [$kw(vtkTemp890) GetPVWidget {StandardDeviation}]
$kw(vtkTemp930) SetValue 0.5
$kw(vtkTemp890) AcceptCallback
set kw(vtkTemp943) [$kw(vtkTemp890) GetPVOutput]
$kw(vtkTemp943) ColorByPointField {RTData} 1
$kw(vtkTemp1) SetCurrentPVSourceCallback $kw(vtkTemp544)
set kw(vtkTemp1037) [$kw(vtkTemp1) CreatePVSource GroupParts]
set kw(vtkTemp1043) [$kw(vtkTemp1037) GetPVWidget {inputs}]
$kw(vtkTemp1043) AllOffCallback
$kw(vtkTemp1043) SetSelectState $kw(vtkTemp544) 1
$kw(vtkTemp1043) SetSelectState $kw(vtkTemp890) 1
$kw(vtkTemp1037) AcceptCallback
set kw(vtkTemp1062) [$kw(vtkTemp1037) GetPVOutput]
$kw(vtkTemp1062) ColorByPointField {RTData} 1
$kw(vtkTemp1) SetCurrentPVSourceCallback $kw(vtkTemp1037)
set kw(vtkTemp1156) [$kw(vtkTemp1) CreatePVSource Contour]
set kw(vtkTemp1178) [$kw(vtkTemp1156) GetPVWidget {Input}]
$kw(vtkTemp1178) SetCurrentValue $kw(vtkTemp1037)
set kw(vtkTemp1179) [$kw(vtkTemp1156) GetPVWidget {Scalars}]
$kw(vtkTemp1179) SetValue {RTData}
set kw(vtkTemp1162) [$kw(vtkTemp1156) GetPVWidget {Contour Values}]
$kw(vtkTemp1162) RemoveAllValues 
$kw(vtkTemp1162) AddValue 170
$kw(vtkTemp1162) AddValue 120
$kw(vtkTemp1162) AddValue 50
set kw(vtkTemp1169) [$kw(vtkTemp1156) GetPVWidget {Compute Normals}]
$kw(vtkTemp1169) SetState 1
set kw(vtkTemp1172) [$kw(vtkTemp1156) GetPVWidget {Compute Gradients}]
$kw(vtkTemp1172) SetState 0
set kw(vtkTemp1175) [$kw(vtkTemp1156) GetPVWidget {Compute Scalars}]
$kw(vtkTemp1175) SetState 1
$kw(vtkTemp1156) AcceptCallback
set kw(vtkTemp1198) [$kw(vtkTemp1156) GetPVOutput]
$kw(vtkTemp1198) ColorByPointField {RTData} 1
$kw(vtkTemp1198) SetColorRange -19.420813 253.372116
$kw(vtkTemp1) SetCurrentPVSourceCallback $kw(vtkTemp1037)
set kw(vtkTemp1292) [$kw(vtkTemp1) CreatePVSource ExtractParts]
set kw(vtkTemp1298) [$kw(vtkTemp1292) GetPVWidget {parts}]
$kw(vtkTemp1298) SetSelectState 0 0
$kw(vtkTemp1298) SetSelectState 1 1
$kw(vtkTemp1292) AcceptCallback
set kw(vtkTemp1310) [$kw(vtkTemp1292) GetPVOutput]
$kw(vtkTemp1310) ColorByPointField {RTData} 1
$kw(vtkTemp1) SetCurrentPVSourceCallback $kw(vtkTemp1292)
set kw(vtkTemp1404) [$kw(vtkTemp1) CreatePVSource ExtractVOI]
set kw(vtkTemp1427) [$kw(vtkTemp1404) GetPVWidget {Input}]
$kw(vtkTemp1427) SetCurrentValue $kw(vtkTemp1292)
set kw(vtkTemp1415) [$kw(vtkTemp1404) GetPVWidget {VOI}]
$kw(vtkTemp1415) SetValue 2 10 -7 -7 -10 10 
set kw(vtkTemp1422) [$kw(vtkTemp1404) GetPVWidget {SampleRate}]
$kw(vtkTemp1422) SetValue 1 1 1
$kw(vtkTemp1404) AcceptCallback
set kw(vtkTemp1438) [$kw(vtkTemp1404) GetPVOutput]
$kw(vtkTemp1438) DrawSurface
$kw(vtkTemp1438) ColorByPointField {RTData} 1
$kw(vtkTemp17) SetBackgroundColor 0 0 0
$kw(vtkTemp17) SetCameraState 12.8281 -41.2598 -35.7789 -1.86549 10.1548 8.9481 -0.780543 -0.522102 0.343747

# Retrace
#  update
#  $Application StopRecordingScript
#  [ $Application GetMainWindow ] DeleteAllSources
#  # Source the trace to regenerate the sources.
#  if {[catch {set channel [open test.tmp w]}] == 0 } {
#     close $channel
#     file delete -force test.tmp
#     source "[$Application GetTraceFileName]"
#  }

# Fix the size of the image.
set RenWin1 [[[$Application GetMainWindow] GetMainView] GetRenderWindow]
$RenWin1 SetSize 300 300
$RenWin1 Render
update

for {set i  1} {$i < [expr $argc - 1]} {incr i} {
    if {[lindex $argv $i] == "-C"} {
	source [lindex $argv [expr $i + 1]]
	$Application SetExitStatus [CompareImage [[$Application GetMainWindow] GetMainView]]
    }
}
   
$Application Exit
