$Application ExitOnReturnOn

    if {[info exists argc]} { 
        set argcm1 [expr $argc - 1]
        for {set i 0} {$i < $argcm1} {incr i} {
            if {[lindex $argv $i] == "-D" && $i < $argcm1} {
		set DataDir [lindex $argv [expr $i + 1]]
            }
        }
    } 
catch {set PARAVIEW_BASELINE $env(PARAVIEW_BASELINE)}

proc decipadString { str before total } {
    set x [string first "." $str]
    if { $x == -1 } { 
	set str "${str}.0"
    }

    set x [string first "." $str]
    while { $x >= 0 && $x < $before } {
	set str " $str"
	set x [string first "." $str]
    }

    if { [string length $str] >= $total } {
        return [string range $str 0 [expr $total - 1]]
    }

    while { [string length $str] < $total } {
        set str "${str}0"
    }
    return $str
}

# hack to get the window.
set pvWindow [lindex [vtkPVWindow ListInstances] 0]

set pvSphere [$pvWindow CreatePVSource SphereSource]
[$pvSphere GetVTKSource] SetThetaResolution 16
$pvSphere UpdateParameterWidgets
$pvSphere AcceptCallback

set pvShrink [$pvWindow CreatePVSource ShrinkFilter]
[$pvShrink GetVTKSource] SetShrinkFactor 0.9
$pvShrink UpdateParameterWidgets
$pvShrink AcceptCallback


$pvShrink DeleteCallback


# Retrace
update
$Application StopRecordingScript
[ $Application GetMainWindow ] DeleteAllSources
# Source the trace to regenerate the sources.
if {[catch {set channel [open test.tmp w]}] == 0 } {
   close $channel
   file delete -force test.tmp
   source "[$Application GetTraceFileName]"
}

RenWin1 SetSize 250 250
RenWin1 Render
$Application Exit


