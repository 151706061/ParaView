if {[info exists argc]} { 
    set argcm1 [expr $argc - 1]
    for {set i 0} {$i < $argcm1} {incr i} {
        if {[lindex $argv $i] == "-D" && $i < $argcm1} {
		set DataDir [lindex $argv [expr $i + 1]]
        }
    }
} 


# This test is to see if the bounds menu gets updated properly
# when the input menu is changed.

# Create a text file. "out.txt" is a special name
if { [catch {set fp [open "out.txt" w]}] != 0 } {
  Application SetExitStatus 2
  Application Exit
  exit
}

set kw(vtkTemp1) [Application GetMainWindow]
set kw(vtkTemp44) [$kw(vtkTemp1) GetMainView]
set kw(vtkTemp90) [$kw(vtkTemp1) GetGlyphSource Arrow]
set kw(vtkTemp94) [$kw(vtkTemp1) GetGlyphSource Cone]
set kw(vtkTemp98) [$kw(vtkTemp1) GetGlyphSource Sphere]


set kw(vtkTemp99) [$kw(vtkTemp1) CreatePVSource vtkSphereSource]
$kw(vtkTemp99) AcceptCallback
set kw(vtkTemp167) [$kw(vtkTemp1) CreatePVSource vtkSphereSource]
set kw(vtkTemp177) [$kw(vtkTemp167) GetPVWidget {Center}]
$kw(vtkTemp177) SetValue 1.5 0 0
set kw(vtkTemp182) [$kw(vtkTemp167) GetPVWidget {Radius}]
$kw(vtkTemp182) SetValue 1.0
set kw(vtkTemp185) [$kw(vtkTemp167) GetPVWidget {Theta Resolution}]
$kw(vtkTemp185) SetValue 32
set kw(vtkTemp194) [$kw(vtkTemp167) GetPVWidget {Phi Resolution}]
$kw(vtkTemp194) SetValue 24
$kw(vtkTemp167) AcceptCallback
$kw(vtkTemp1) ResetCameraCallback

set kw(vtkTemp209) [$kw(vtkTemp1) ClipPlaneCallback]

$kw(vtkTemp44) SetBackgroundColor 1.000000 0.000000 0.501961

set BoundsDisplay [$kw(vtkTemp209) GetPVWidget {BoundsDisplay}]
puts $fp [[$BoundsDisplay GetWidget] GetBounds]

$kw(vtkTemp209) AcceptCallback
set kw(vtkTemp217) [$kw(vtkTemp209) GetPVWidget {Plane}]
set kw(vtkTemp218) [$kw(vtkTemp217) GetNormalEntry]
$kw(vtkTemp218) SetValue -0.04923 0.99878 0.00259
$kw(vtkTemp209) AcceptCallback
set kw(vtkTemp215) [$kw(vtkTemp209) GetPVWidget {Input}]
$kw(vtkTemp215) SetCurrentValue $kw(vtkTemp99)

puts $fp [[$BoundsDisplay GetWidget] GetBounds]
close $fp

source $DataDir/Utility/rtText.tcl
pvFileTest $DataDir/Baseline/BoundsDisplay.txt
file delete -force out.txt


# might as well do the image comparison.
$kw(vtkTemp209) AcceptCallback


# Fix the size of the image.
RenWin1 SetSize 300 300
RenWin1 Render
update

for {set i  1} {$i < [expr $argc - 1]} {incr i} {
    if {[lindex $argv $i] == "-C"} {
	source [lindex $argv [expr $i + 1]]
	$Application SetExitStatus [CompareImage [[Application GetMainWindow] GetMainView]]
    }
}
 
Application Exit





